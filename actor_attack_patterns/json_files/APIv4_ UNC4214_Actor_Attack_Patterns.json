{
  "id": "threat-actor--a7eb3c44-7dbf-50be-ab5b-4ca9868cb0bb",
  "name": "UNC4214",
  "type": "actor-mitre",
  "attack-patterns": {
    "Persistence": [
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "suspected",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "suspected"
          }
        ]
      }
    ],
    "Impact": [
      {
        "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
        "attribution_scope": "confirmed"
      }
    ],
    "Exfiltration": [
      {
        "id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
        "attribution_scope": "confirmed"
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
        "attribution_scope": "confirmed"
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "suspected",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "suspected"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
        "attribution_scope": "confirmed"
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
        "attribution_scope": "confirmed"
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--a7eb3c44-7dbf-50be-ab5b-4ca9868cb0bb\", \"name\": \"UNC4214\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Persistence\": [{\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"suspected\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"suspected\"}]}], \"Impact\": [{\"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\", \"attribution_scope\": \"confirmed\"}], \"Exfiltration\": [{\"id\": \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\", \"attribution_scope\": \"confirmed\"}], \"Execution\": [{\"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\", \"attribution_scope\": \"confirmed\"}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"suspected\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"suspected\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5\", \"attribution_scope\": \"confirmed\"}]}], \"Discovery\": [{\"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\", \"attribution_scope\": \"confirmed\"}], \"Credential Access\": [{\"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\", \"attribution_scope\": \"confirmed\"}], \"Collection\": [{\"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317\", \"attribution_scope\": \"confirmed\"}]}], \"Command and Control\": [{\"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:08.479Z\", \"name\": \"Proxy\", \"attack_pattern_identifier\": \"T1090\", \"description\": \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\\n\\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\", \"modified\": \"2020-10-21T17:54:28.531Z\", \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"}, \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-23T17:46:59.535Z\", \"name\": \"Boot or Logon Autostart Execution\", \"attack_pattern_identifier\": \"T1547\", \"description\": \"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\\u00a0 These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\", \"modified\": \"2020-10-09T16:05:36.772Z\", \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\"}, \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T00:36:30.759Z\", \"name\": \"Compromise Infrastructure\", \"attack_pattern_identifier\": \"T1584\", \"description\": \"Before compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\\n\\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)\", \"modified\": \"2020-10-22T18:03:23.937Z\", \"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.587Z\", \"name\": \"Modify Registry\", \"attack_pattern_identifier\": \"T1112\", \"description\": \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\", \"modified\": \"2020-08-13T20:02:49.641Z\", \"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"}, \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Network Share Discovery\", \"attack_pattern_identifier\": \"T1135\", \"description\": \"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \\n\\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\", \"modified\": \"2020-10-07T18:10:06.463Z\", \"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\"}, \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:27.342Z\", \"name\": \"System Network Configuration Discovery\", \"attack_pattern_identifier\": \"T1016\", \"description\": \"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-15T00:55:33.136Z\", \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-20T21:01:25.428Z\", \"name\": \"Archive via Utility\", \"attack_pattern_identifier\": \"T1560.001\", \"modified\": \"2020-03-25T21:54:37.374Z\", \"description\": \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.\", \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"}, \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:10.728Z\", \"name\": \"Non-Application Layer Protocol\", \"attack_pattern_identifier\": \"T1095\", \"modified\": \"2020-10-21T19:41:49.412Z\", \"description\": \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\", \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"}, \"attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:04:25.865Z\", \"name\": \"Binary Padding\", \"attack_pattern_identifier\": \"T1027.001\", \"description\": \"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \\n\\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) \", \"modified\": \"2020-09-17T18:25:33.828Z\", \"id\": \"attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5\"}, \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-08T20:04:35.508Z\", \"name\": \"Steal Web Session Cookie\", \"attack_pattern_identifier\": \"T1539\", \"description\": \"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\\n\\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\\n\\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a man-in-the-middle proxy that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\\n\\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1506) technique to login to the corresponding web application.\", \"modified\": \"2020-04-21T15:26:25.584Z\", \"id\": \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\"}, \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:58:11.791Z\", \"name\": \"Keylogging\", \"attack_pattern_identifier\": \"T1056.001\", \"description\": \"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) \", \"modified\": \"2020-10-21T01:30:56.227Z\", \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"}, \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Data from Information Repositories\", \"attack_pattern_identifier\": \"T1213\", \"description\": \"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\", \"modified\": \"2020-10-12T12:16:55.085Z\", \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T21:13:10.467Z\", \"name\": \"Local Data Staging\", \"attack_pattern_identifier\": \"T1074.001\", \"modified\": \"2020-05-26T19:23:54.854Z\", \"description\": \"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\", \"id\": \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.458Z\", \"name\": \"Automated Exfiltration\", \"attack_pattern_identifier\": \"T1020\", \"description\": \"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \\n\\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).\", \"modified\": \"2020-10-22T02:24:54.881Z\", \"id\": \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\"}, \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"User Execution\", \"attack_pattern_identifier\": \"T1204\", \"modified\": \"2020-03-11T14:55:56.315Z\", \"description\": \"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\\n\\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\"}, \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-04T12:47:23.631Z\", \"name\": \"Unsecured Credentials\", \"attack_pattern_identifier\": \"T1552\", \"description\": \"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).\", \"modified\": \"2020-10-15T19:39:36.109Z\", \"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\"}, \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:35.733Z\", \"name\": \"System Owner/User Discovery\", \"attack_pattern_identifier\": \"T1033\", \"modified\": \"2020-03-15T01:03:47.866Z\", \"description\": \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.\", \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"}, \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:19.735Z\", \"name\": \"OS Credential Dumping\", \"attack_pattern_identifier\": \"T1003\", \"description\": \"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\", \"modified\": \"2020-06-09T20:46:00.758Z\", \"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\"}, \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-09-16T17:52:44.147Z\", \"name\": \"Software Discovery\", \"attack_pattern_identifier\": \"T1518\", \"description\": \"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\", \"modified\": \"2020-09-16T19:36:17.133Z\", \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"}, \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.329Z\", \"name\": \"Windows Management Instrumentation\", \"attack_pattern_identifier\": \"T1047\", \"description\": \"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\", \"modified\": \"2020-05-13T22:50:51.258Z\", \"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\"}, \"attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T19:24:00.951Z\", \"name\": \"Spearphishing via Service\", \"attack_pattern_identifier\": \"T1566.003\", \"description\": \"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \\n\\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\\n\\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.\", \"modified\": \"2020-10-18T01:55:02.988Z\", \"id\": \"attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317\"}, \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Access Token Manipulation\", \"attack_pattern_identifier\": \"T1134\", \"description\": \"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\\n\\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.\", \"modified\": \"2020-04-16T19:37:02.355Z\", \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"}, \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:42:44.103Z\", \"name\": \"Timestomp\", \"attack_pattern_identifier\": \"T1070.006\", \"modified\": \"2020-03-29T21:39:46.724Z\", \"description\": \"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\", \"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-17T22:22:24.505Z\", \"name\": \"Virtualization/Sandbox Evasion\", \"attack_pattern_identifier\": \"T1497\", \"modified\": \"2020-07-01T16:32:02.272Z\", \"description\": \"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\", \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-14T23:29:19.581Z\", \"name\": \"Domain Fronting\", \"attack_pattern_identifier\": \"T1090.004\", \"description\": \"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \\\"domainless\\\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\\n\\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.\", \"modified\": \"2020-09-16T19:30:54.226Z\", \"id\": \"attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2\"}, \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:38:24.334Z\", \"name\": \"Python\", \"attack_pattern_identifier\": \"T1059.006\", \"description\": \"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\\n\\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.\", \"modified\": \"2020-06-23T19:03:15.180Z\", \"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}, \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-11-27T14:58:00.429Z\", \"name\": \"Scheduled Task\", \"attack_pattern_identifier\": \"T1053.005\", \"description\": \"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\", \"modified\": \"2020-03-24T13:45:03.730Z\", \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"}, \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.060Z\", \"name\": \"Screen Capture\", \"attack_pattern_identifier\": \"T1113\", \"description\": \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\\n\", \"modified\": \"2020-03-24T19:56:37.627Z\", \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"}, \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:46.977Z\", \"name\": \"Scheduled Task/Job\", \"attack_pattern_identifier\": \"T1053\", \"modified\": \"2020-10-14T15:20:01.069Z\", \"description\": \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\\n\\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).\", \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\"}, \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-09T12:51:45.570Z\", \"name\": \"Exfiltration Over Web Service\", \"attack_pattern_identifier\": \"T1567\", \"description\": \"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\\n\\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.\", \"modified\": \"2020-03-28T01:02:24.276Z\", \"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\"}, \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:13.915Z\", \"name\": \"Web Service\", \"attack_pattern_identifier\": \"T1102\", \"modified\": \"2020-03-26T23:26:10.297Z\", \"description\": \"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\", \"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.195Z\", \"name\": \"Two-Factor Authentication Interception\", \"attack_pattern_identifier\": \"T1111\", \"modified\": \"2020-03-25T20:35:21.672Z\", \"description\": \"Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \\n\\nIf a smart card is used for two-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\\n\\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\\n\\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)\", \"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\"}, \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:27:31.768Z\", \"name\": \"DNS\", \"attack_pattern_identifier\": \"T1071.004\", \"description\": \"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) \", \"modified\": \"2020-10-21T16:26:34.196Z\", \"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T20:57:37.959Z\", \"name\": \"System Checks\", \"attack_pattern_identifier\": \"T1497.001\", \"description\": \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\", \"modified\": \"2020-07-01T16:32:02.514Z\", \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"}, \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-26T17:41:25.933Z\", \"name\": \"Hide Artifacts\", \"attack_pattern_identifier\": \"T1564\", \"description\": \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\", \"modified\": \"2020-09-23T11:31:50.636Z\", \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"}, \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:25.584Z\", \"name\": \"Query Registry\", \"attack_pattern_identifier\": \"T1012\", \"description\": \"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\\n\\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-26T18:08:20.049Z\", \"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"}, \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-12T20:38:12.465Z\", \"name\": \"Hijack Execution Flow\", \"attack_pattern_identifier\": \"T1574\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\\n\\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.\", \"modified\": \"2020-10-17T15:15:28.288Z\", \"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\"}, \"attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:27.985Z\", \"name\": \"Automated Collection\", \"attack_pattern_identifier\": \"T1119\", \"description\": \"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \\n\\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files.\", \"modified\": \"2020-03-31T22:18:43.019Z\", \"id\": \"attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619\"}, \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:58.938Z\", \"name\": \"Data Staged\", \"attack_pattern_identifier\": \"T1074\", \"description\": \"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.\", \"modified\": \"2020-09-14T19:48:08.180Z\", \"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\"}, \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:06.988Z\", \"name\": \"Account Discovery\", \"attack_pattern_identifier\": \"T1087\", \"description\": \"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\", \"modified\": \"2020-09-16T15:10:18.260Z\", \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:49:36.954Z\", \"name\": \"Malicious File\", \"attack_pattern_identifier\": \"T1204.002\", \"description\": \"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\\n\\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\\n\\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"modified\": \"2020-03-11T14:55:56.177Z\", \"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\"}, \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T22:02:48.566Z\", \"name\": \"Registry Run Keys / Startup Folder\", \"attack_pattern_identifier\": \"T1547.001\", \"description\": \"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \\\"run keys\\\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\\n\\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe following run keys are created by default on Windows systems:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder items for persistence:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n\\nThe following Registry keys can control automatic startup of services during boot:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically launch programs.\\n\\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\", \"modified\": \"2020-08-03T16:30:26.918Z\", \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"}, \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T19:41:37.908Z\", \"name\": \"DLL Side-Loading\", \"attack_pattern_identifier\": \"T1574.002\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program.\\n\\nPrograms may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: About Side by Side Assemblies) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable by replacing the legitimate DLL with a malicious one.  (Citation: FireEye DLL Side-Loading)\\n\\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.\", \"modified\": \"2020-10-17T15:15:27.807Z\", \"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:24.512Z\", \"name\": \"Application Window Discovery\", \"attack_pattern_identifier\": \"T1010\", \"description\": \"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\", \"modified\": \"2020-03-26T15:44:27.068Z\", \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"}, \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:41:08.652Z\", \"name\": \"Code Signing Certificates\", \"attack_pattern_identifier\": \"T1587.002\", \"description\": \"Before compromising a victim, adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.\", \"modified\": \"2020-10-15T01:15:54.945Z\", \"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\"}, \"attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Drive-by Compromise\", \"attack_pattern_identifier\": \"T1189\", \"description\": \"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\\n\\nMultiple ways of delivering exploit code to a browser exist, including:\\n\\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\\n* Malicious ads are paid for and served through legitimate ad providers.\\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\\n\\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\\n\\nTypical drive-by compromise process:\\n\\n1. A user visits a website that is used to host the adversary controlled content.\\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \\n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\\n\\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\\n\\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)\", \"modified\": \"2020-03-29T23:48:15.056Z\", \"id\": \"attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-02T18:45:07.892Z\", \"name\": \"Phishing\", \"attack_pattern_identifier\": \"T1566\", \"description\": \"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\\n\\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems or to gather credentials for use of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Phishing may also be conducted via third-party services, like social media platforms.\", \"modified\": \"2020-10-18T01:55:03.337Z\", \"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\"}, \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-04T20:42:28.541Z\", \"name\": \"System Shutdown/Reboot\", \"attack_pattern_identifier\": \"T1529\", \"modified\": \"2020-03-27T21:18:48.149Z\", \"description\": \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\", \"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"}, \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:43:31.706Z\", \"name\": \"Malicious Link\", \"attack_pattern_identifier\": \"T1204.001\", \"modified\": \"2020-03-11T14:43:31.706Z\", \"description\": \"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).\", \"id\": \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\"}, \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:26:49.433Z\", \"name\": \"Hidden Window\", \"attack_pattern_identifier\": \"T1564.003\", \"description\": \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", \"modified\": \"2020-03-29T22:49:43.557Z\", \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"}, \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:16.408Z\", \"name\": \"Ingress Tool Transfer\", \"attack_pattern_identifier\": \"T1105\", \"modified\": \"2020-03-20T15:42:48.595Z\", \"description\": \"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\", \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:17:46.686Z\", \"name\": \"Software Packing\", \"attack_pattern_identifier\": \"T1027.002\", \"description\": \"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  \", \"modified\": \"2020-02-05T20:05:41.548Z\", \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"}, \"attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-26T17:46:13.128Z\", \"name\": \"Hidden Files and Directories\", \"attack_pattern_identifier\": \"T1564.001\", \"description\": \"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \\u2018hidden\\u2019 file. These files don\\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \\u2013a</code> for Linux and macOS).\\n\\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \\u201c.\\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, \\u2018.\\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \\u201cls\\u201d. Users must specifically change settings to have these files viewable.\\n\\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\\u2019t clutter up the user\\u2019s workspace. For example, SSH utilities create a .ssh folder that\\u2019s hidden and contains the user\\u2019s known hosts and keys.\\n\\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.\", \"modified\": \"2020-03-29T22:32:25.985Z\", \"id\": \"attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d\"}}}"