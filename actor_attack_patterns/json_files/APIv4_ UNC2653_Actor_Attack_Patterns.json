{
  "id": "threat-actor--97306757-a143-585a-a5e3-0254bd61a1d8",
  "name": "UNC2653",
  "type": "actor-mitre",
  "attack-patterns": {
    "Execution": [
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--97306757-a143-585a-a5e3-0254bd61a1d8\", \"name\": \"UNC2653\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Execution\": [{\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\", \"attribution_scope\": \"confirmed\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\", \"attribution_scope\": \"confirmed\"}]}], \"Command and Control\": [{\"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}]}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-09-30T16:37:40.271Z\", \"name\": \"Acquire Infrastructure\", \"attack_pattern_identifier\": \"T1583\", \"description\": \"Before compromising a victim, adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.\\n\\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.\", \"modified\": \"2020-10-22T17:59:17.606Z\", \"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T19:05:18.137Z\", \"name\": \"Spearphishing Attachment\", \"attack_pattern_identifier\": \"T1566.001\", \"description\": \"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.\\n\\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\", \"modified\": \"2020-10-18T01:52:25.316Z\", \"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\"}, \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:29:51.508Z\", \"name\": \"Visual Basic\", \"attack_pattern_identifier\": \"T1059.005\", \"description\": \"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\\n\\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\\n\\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.\", \"modified\": \"2020-08-13T20:09:39.122Z\", \"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\"}, \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.511Z\", \"name\": \"Masquerading\", \"attack_pattern_identifier\": \"T1036\", \"description\": \"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\", \"modified\": \"2020-07-09T13:54:28.727Z\", \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:13.915Z\", \"name\": \"Web Service\", \"attack_pattern_identifier\": \"T1102\", \"modified\": \"2020-03-26T23:26:10.297Z\", \"description\": \"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\", \"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\"}, \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Exploit Public-Facing Application\", \"attack_pattern_identifier\": \"T1190\", \"description\": \"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \\n\\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\\n\\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)\", \"modified\": \"2020-10-21T01:10:54.358Z\", \"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\"}, \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:42:24.974Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1587.003\", \"description\": \"Before compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\\n\\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\", \"modified\": \"2020-10-22T18:18:08.422Z\", \"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\"}, \"attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-10-17T00:14:20.652Z\", \"name\": \"Template Injection\", \"attack_pattern_identifier\": \"T1221\", \"description\": \"Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft\\u2019s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. (Citation: Microsoft Open XML July 2017)\\n\\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\\n\\nAdversaries may abuse this technology to initially conceal malicious code to be executed via documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. (Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. (Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit. (Citation: MalwareBytes Template Injection OCT 2017)\\n\\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt. (Citation: Anomali Template Injection MAR 2018) (Citation: Talos Template Injection July 2017) (Citation: ryhanson phishery SEPT 2016)\", \"modified\": \"2020-04-29T14:37:59.462Z\", \"id\": \"attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534\"}, \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T00:44:23.935Z\", \"name\": \"Virtual Private Server\", \"attack_pattern_identifier\": \"T1583.003\", \"description\": \"Before compromising a victim, adversaries may rent Virtual Private Servers (VPSs)\\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\\n\\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)\", \"modified\": \"2020-10-22T17:58:32.476Z\", \"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-02T18:45:07.892Z\", \"name\": \"Phishing\", \"attack_pattern_identifier\": \"T1566\", \"description\": \"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\\n\\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems or to gather credentials for use of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Phishing may also be conducted via third-party services, like social media platforms.\", \"modified\": \"2020-10-18T01:55:03.337Z\", \"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}}}"