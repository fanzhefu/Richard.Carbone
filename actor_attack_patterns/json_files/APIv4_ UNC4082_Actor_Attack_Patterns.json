{
  "id": "threat-actor--e8d57379-d341-5be4-983f-13200874a5d3",
  "name": "UNC4082",
  "type": "actor-mitre",
  "attack-patterns": {
    "Persistence": [
      {
        "id": "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67",
        "attribution_scope": "suspected",
        "sub_techniques": [
          {
            "id": "attack-pattern--635cbe30-392d-4e27-978e-66774357c762",
            "attribution_scope": "suspected"
          }
        ]
      },
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Impact": [
      {
        "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
        "attribution_scope": "confirmed"
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Lateral Movement": [
      {
        "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
        "attribution_scope": "confirmed"
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--e8d57379-d341-5be4-983f-13200874a5d3\", \"name\": \"UNC4082\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Persistence\": [{\"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\", \"attribution_scope\": \"suspected\", \"sub_techniques\": [{\"id\": \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\", \"attribution_scope\": \"suspected\"}]}, {\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}]}], \"Impact\": [{\"id\": \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\", \"attribution_scope\": \"confirmed\"}], \"Execution\": [{\"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\", \"attribution_scope\": \"confirmed\"}]}], \"Lateral Movement\": [{\"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\", \"attribution_scope\": \"confirmed\"}]}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\", \"attribution_scope\": \"confirmed\"}]}], \"Discovery\": [{\"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}], \"Credential Access\": [{\"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}], \"Collection\": [{\"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\", \"attribution_scope\": \"confirmed\"}], \"Command and Control\": [{\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-28T17:05:14.707Z\", \"name\": \"Clear Windows Event Logs\", \"attack_pattern_identifier\": \"T1070.001\", \"description\": \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\\n\\nThe event logs can be cleared with the following utility commands:\\n\\n* <code>wevtutil cl system</code>\\n* <code>wevtutil cl application</code>\\n* <code>wevtutil cl security</code>\\n\\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).\", \"modified\": \"2020-03-29T21:17:03.732Z\", \"id\": \"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\"}, \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:00:48.814Z\", \"name\": \"Disable or Modify System Firewall\", \"attack_pattern_identifier\": \"T1562.004\", \"description\": \"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\\n\\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. \", \"modified\": \"2020-03-29T22:18:11.166Z\", \"id\": \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\"}, \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:42:24.974Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1587.003\", \"description\": \"Before compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\\n\\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\", \"modified\": \"2020-10-22T18:18:08.422Z\", \"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\"}, \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:17:46.686Z\", \"name\": \"Software Packing\", \"attack_pattern_identifier\": \"T1027.002\", \"description\": \"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  \", \"modified\": \"2020-02-05T20:05:41.548Z\", \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"}, \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-26T17:41:25.933Z\", \"name\": \"Hide Artifacts\", \"attack_pattern_identifier\": \"T1564\", \"description\": \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\", \"modified\": \"2020-09-23T11:31:50.636Z\", \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"}, \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T22:02:48.566Z\", \"name\": \"Registry Run Keys / Startup Folder\", \"attack_pattern_identifier\": \"T1547.001\", \"description\": \"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \\\"run keys\\\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\\n\\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe following run keys are created by default on Windows systems:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder items for persistence:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n\\nThe following Registry keys can control automatic startup of services during boot:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically launch programs.\\n\\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\", \"modified\": \"2020-08-03T16:30:26.918Z\", \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"}, \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:46.977Z\", \"name\": \"Scheduled Task/Job\", \"attack_pattern_identifier\": \"T1053\", \"modified\": \"2020-10-14T15:20:01.069Z\", \"description\": \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\\n\\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).\", \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\"}, \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-10T18:33:36.159Z\", \"name\": \"Service Execution\", \"attack_pattern_identifier\": \"T1569.002\", \"modified\": \"2020-03-28T18:52:02.384Z\", \"description\": \"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals)\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.\", \"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-23T17:46:59.535Z\", \"name\": \"Boot or Logon Autostart Execution\", \"attack_pattern_identifier\": \"T1547\", \"description\": \"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\\u00a0 These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\", \"modified\": \"2020-10-09T16:05:36.772Z\", \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\"}, \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-17T22:22:24.505Z\", \"name\": \"Virtualization/Sandbox Evasion\", \"attack_pattern_identifier\": \"T1497\", \"modified\": \"2020-07-01T16:32:02.272Z\", \"description\": \"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\", \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"}, \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-10T18:23:06.482Z\", \"name\": \"System Services\", \"attack_pattern_identifier\": \"T1569\", \"description\": \"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.\", \"modified\": \"2020-06-08T23:28:29.250Z\", \"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-21T20:22:13.470Z\", \"name\": \"Impair Defenses\", \"attack_pattern_identifier\": \"T1562\", \"description\": \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\\n\\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.\", \"modified\": \"2020-10-19T16:31:35.249Z\", \"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\"}, \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.587Z\", \"name\": \"Modify Registry\", \"attack_pattern_identifier\": \"T1112\", \"description\": \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\", \"modified\": \"2020-08-13T20:02:49.641Z\", \"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"}, \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:19.735Z\", \"name\": \"OS Credential Dumping\", \"attack_pattern_identifier\": \"T1003\", \"description\": \"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\", \"modified\": \"2020-06-09T20:46:00.758Z\", \"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\"}, \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:42:44.103Z\", \"name\": \"Timestomp\", \"attack_pattern_identifier\": \"T1070.006\", \"modified\": \"2020-03-29T21:39:46.724Z\", \"description\": \"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\", \"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"}, \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:28.187Z\", \"name\": \"Remote System Discovery\", \"attack_pattern_identifier\": \"T1018\", \"modified\": \"2020-09-17T12:26:53.669Z\", \"description\": \"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039). Adversaries may also use local host files (ex: <code>C:\\\\Windows\\\\System32\\\\Drivers\\\\etc\\\\hosts</code> or <code>/etc/hosts</code>) in order to discover the hostname to IP address mappings of remote systems. \\n\\nSpecific to macOS, the <code>bonjour</code> protocol exists to discover additional Mac-based systems within the same broadcast domain.\", \"id\": \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\"}, \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-10T16:03:18.865Z\", \"name\": \"Create or Modify System Process\", \"attack_pattern_identifier\": \"T1543\", \"description\": \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \\n\\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \\n\\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  \", \"modified\": \"2020-10-09T13:46:29.922Z\", \"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\"}, \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:06.988Z\", \"name\": \"Account Discovery\", \"attack_pattern_identifier\": \"T1087\", \"description\": \"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\", \"modified\": \"2020-09-16T15:10:18.260Z\", \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:42:35.572Z\", \"name\": \"NTDS\", \"attack_pattern_identifier\": \"T1003.003\", \"modified\": \"2020-03-24T20:39:39.949Z\", \"description\": \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\\\NTDS\\\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\\n\\nIn addition to looking NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\\n\\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\\n\\n* Volume Shadow Copy\\n* secretsdump.py\\n* Using the in-built Windows tool, ntdsutil.exe\\n* Invoke-NinjaCopy\\n\", \"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:12.196Z\", \"name\": \"Account Manipulation\", \"attack_pattern_identifier\": \"T1098\", \"description\": \"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\", \"modified\": \"2020-10-05T16:43:29.473Z\", \"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\"}, \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T18:03:46.248Z\", \"name\": \"Rundll32\", \"attack_pattern_identifier\": \"T1218.011\", \"description\": \"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\\n\\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\\n\\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\\\"\\\\..\\\\mshtml,RunHTMLApplication \\\";document.write();GetObject(\\\"script:https[:]//www[.]example[.]com/malicious.sct\\\")\\\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\", \"modified\": \"2020-06-20T22:31:42.113Z\", \"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\"}, \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Create Account\", \"attack_pattern_identifier\": \"T1136\", \"description\": \"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\\n\\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.\", \"modified\": \"2020-03-24T12:44:28.199Z\", \"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\"}, \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:27:15.774Z\", \"name\": \"SSH\", \"attack_pattern_identifier\": \"T1021.004\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\\n\\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.(Citation: SSH Secure Shell)\", \"modified\": \"2020-03-23T23:43:46.977Z\", \"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\"}, \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:21.315Z\", \"name\": \"System Service Discovery\", \"attack_pattern_identifier\": \"T1007\", \"modified\": \"2020-03-15T01:05:08.805Z\", \"description\": \"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \\\"sc,\\\" \\\"tasklist /svc\\\" using [Tasklist](https://attack.mitre.org/software/S0057), and \\\"net start\\\" using [Net](https://attack.mitre.org/software/S0039), but adversaries may also use other tools as well. Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\"}, \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:10.728Z\", \"name\": \"Non-Application Layer Protocol\", \"attack_pattern_identifier\": \"T1095\", \"modified\": \"2020-10-21T19:41:49.412Z\", \"description\": \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\", \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"}, \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-20T21:01:25.428Z\", \"name\": \"Archive via Utility\", \"attack_pattern_identifier\": \"T1560.001\", \"modified\": \"2020-03-25T21:54:37.374Z\", \"description\": \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.\", \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"}, \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:35.733Z\", \"name\": \"System Owner/User Discovery\", \"attack_pattern_identifier\": \"T1033\", \"modified\": \"2020-03-15T01:03:47.866Z\", \"description\": \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.\", \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"}, \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T00:44:23.935Z\", \"name\": \"Virtual Private Server\", \"attack_pattern_identifier\": \"T1583.003\", \"description\": \"Before compromising a victim, adversaries may rent Virtual Private Servers (VPSs)\\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\\n\\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)\", \"modified\": \"2020-10-22T17:58:32.476Z\", \"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\"}, \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:58.938Z\", \"name\": \"Data Staged\", \"attack_pattern_identifier\": \"T1074\", \"description\": \"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.\", \"modified\": \"2020-09-14T19:48:08.180Z\", \"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\"}, \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Indirect Command Execution\", \"attack_pattern_identifier\": \"T1202\", \"modified\": \"2020-06-20T22:09:22.559Z\", \"description\": \"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\\n\\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.\", \"id\": \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\"}, \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T19:12:46.830Z\", \"name\": \"Steal or Forge Kerberos Tickets\", \"attack_pattern_identifier\": \"T1558\", \"description\": \"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). \\n\\nKerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \\u201crealms\\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Attackers may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\", \"modified\": \"2020-09-29T16:16:06.868Z\", \"id\": \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\"}, \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-15T13:59:30.390Z\", \"name\": \"Data Encrypted for Impact\", \"attack_pattern_identifier\": \"T1486\", \"description\": \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018) In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017)\\n\\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)\", \"modified\": \"2020-10-14T14:52:11.708Z\", \"id\": \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\"}, \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:58:11.791Z\", \"name\": \"Keylogging\", \"attack_pattern_identifier\": \"T1056.001\", \"description\": \"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) \", \"modified\": \"2020-10-21T01:30:56.227Z\", \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"}, \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:26:49.433Z\", \"name\": \"Hidden Window\", \"attack_pattern_identifier\": \"T1564.003\", \"description\": \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", \"modified\": \"2020-03-29T22:49:43.557Z\", \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"}, \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-11-27T14:58:00.429Z\", \"name\": \"Scheduled Task\", \"attack_pattern_identifier\": \"T1053.005\", \"description\": \"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\", \"modified\": \"2020-03-24T13:45:03.730Z\", \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.060Z\", \"name\": \"Screen Capture\", \"attack_pattern_identifier\": \"T1113\", \"description\": \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\\n\", \"modified\": \"2020-03-24T19:56:37.627Z\", \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"}, \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-04T20:42:28.541Z\", \"name\": \"System Shutdown/Reboot\", \"attack_pattern_identifier\": \"T1529\", \"modified\": \"2020-03-27T21:18:48.149Z\", \"description\": \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\", \"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"}, \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-18T16:39:06.289Z\", \"name\": \"Token Impersonation/Theft\", \"attack_pattern_identifier\": \"T1134.001\", \"modified\": \"2020-03-26T21:29:18.608Z\", \"description\": \"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\\n\\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\", \"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\"}, \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T21:13:10.467Z\", \"name\": \"Local Data Staging\", \"attack_pattern_identifier\": \"T1074.001\", \"modified\": \"2020-05-26T19:23:54.854Z\", \"description\": \"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\", \"id\": \"attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c\"}, \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Signed Binary Proxy Execution\", \"attack_pattern_identifier\": \"T1218\", \"description\": \"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.\", \"modified\": \"2020-10-21T18:37:15.275Z\", \"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\"}, \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T14:07:56.276Z\", \"name\": \"Windows Management Instrumentation Event Subscription\", \"attack_pattern_identifier\": \"T1546.003\", \"description\": \"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. (Citation: Mandiant M-Trends 2015)\\n\\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\\n\\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\", \"modified\": \"2020-05-05T12:02:45.522Z\", \"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Data from Information Repositories\", \"attack_pattern_identifier\": \"T1213\", \"description\": \"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\", \"modified\": \"2020-10-12T12:16:55.085Z\", \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"}, \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-29T19:00:55.901Z\", \"name\": \"Service Stop\", \"attack_pattern_identifier\": \"T1489\", \"description\": \"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \\n\\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)\", \"modified\": \"2020-07-24T15:36:08.042Z\", \"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\"}, \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.329Z\", \"name\": \"Windows Management Instrumentation\", \"attack_pattern_identifier\": \"T1047\", \"description\": \"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\", \"modified\": \"2020-05-13T22:50:51.258Z\", \"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\"}, \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:27.342Z\", \"name\": \"System Network Configuration Discovery\", \"attack_pattern_identifier\": \"T1016\", \"description\": \"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-15T00:55:33.136Z\", \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"}, \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Network Share Discovery\", \"attack_pattern_identifier\": \"T1135\", \"description\": \"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \\n\\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\", \"modified\": \"2020-10-07T18:10:06.463Z\", \"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\"}, \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.967Z\", \"name\": \"Clipboard Data\", \"attack_pattern_identifier\": \"T1115\", \"description\": \"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \\n\\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)\", \"modified\": \"2020-04-23T18:35:58.230Z\", \"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\"}, \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T20:32:20.810Z\", \"name\": \"Disable or Modify Tools\", \"attack_pattern_identifier\": \"T1562.001\", \"modified\": \"2020-03-29T21:52:43.151Z\", \"description\": \"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.\", \"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-17T19:13:50.402Z\", \"name\": \"Windows Service\", \"attack_pattern_identifier\": \"T1543.003\", \"description\": \"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \\n\\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\\n\\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \\n\\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). \", \"modified\": \"2020-09-16T15:49:58.490Z\", \"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}, \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-02-14T16:15:05.974Z\", \"name\": \"Domain Trust Discovery\", \"attack_pattern_identifier\": \"T1482\", \"description\": \"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)\", \"modified\": \"2020-09-17T18:26:17.858Z\", \"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T20:57:37.959Z\", \"name\": \"System Checks\", \"attack_pattern_identifier\": \"T1497.001\", \"description\": \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\", \"modified\": \"2020-07-01T16:32:02.514Z\", \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"}, \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:25:28.212Z\", \"name\": \"SMB/Windows Admin Shares\", \"attack_pattern_identifier\": \"T1021.002\", \"modified\": \"2020-03-23T21:16:02.812Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\\n\\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\\n\\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)\", \"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-09-30T16:37:40.271Z\", \"name\": \"Acquire Infrastructure\", \"attack_pattern_identifier\": \"T1583\", \"description\": \"Before compromising a victim, adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.\\n\\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.\", \"modified\": \"2020-10-22T17:59:17.606Z\", \"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\"}, \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:00.645Z\", \"name\": \"Valid Accounts\", \"attack_pattern_identifier\": \"T1078\", \"description\": \"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\\n\\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. (Citation: TechNet Credential Theft)\", \"modified\": \"2020-10-19T16:01:22.724Z\", \"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-28T13:50:22.506Z\", \"name\": \"Local Account\", \"attack_pattern_identifier\": \"T1136.001\", \"description\": \"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account.\\n\\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\", \"modified\": \"2020-03-23T18:04:20.780Z\", \"id\": \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\"}, \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Access Token Manipulation\", \"attack_pattern_identifier\": \"T1134\", \"description\": \"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\\n\\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.\", \"modified\": \"2020-04-16T19:37:02.355Z\", \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"}, \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-22T21:04:23.285Z\", \"name\": \"Event Triggered Execution\", \"attack_pattern_identifier\": \"T1546\", \"description\": \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \\n\\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\\n\\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. \", \"modified\": \"2020-10-21T18:48:27.576Z\", \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\"}, \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:24.512Z\", \"name\": \"Application Window Discovery\", \"attack_pattern_identifier\": \"T1010\", \"description\": \"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\", \"modified\": \"2020-03-26T15:44:27.068Z\", \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"}, \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:23:26.059Z\", \"name\": \"Remote Desktop Protocol\", \"attack_pattern_identifier\": \"T1021.001\", \"modified\": \"2020-02-25T19:23:34.204Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\\n\\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \\n\\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)\", \"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\"}, \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:08:26.480Z\", \"name\": \"Domain Account\", \"attack_pattern_identifier\": \"T1087.002\", \"description\": \"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\\n\\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.\", \"modified\": \"2020-03-26T13:42:34.402Z\", \"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.858Z\", \"name\": \"Remote Services\", \"attack_pattern_identifier\": \"T1021\", \"modified\": \"2020-03-25T12:25:03.251Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\\n\\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\", \"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\"}, \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:25.584Z\", \"name\": \"Query Registry\", \"attack_pattern_identifier\": \"T1012\", \"description\": \"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\\n\\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-26T18:08:20.049Z\", \"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"}, \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:07:55.393Z\", \"name\": \"Local Account\", \"attack_pattern_identifier\": \"T1087.001\", \"description\": \"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\\n\\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file.\", \"modified\": \"2020-03-20T19:39:59.544Z\", \"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\"}, \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.728Z\", \"name\": \"Process Discovery\", \"attack_pattern_identifier\": \"T1057\", \"modified\": \"2020-03-26T18:05:53.130Z\", \"description\": \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\", \"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"}, \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-15T16:03:39.082Z\", \"name\": \"Protocol Tunneling\", \"attack_pattern_identifier\": \"T1572\", \"description\": \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \\n\\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \\n\\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \\n\\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. \", \"modified\": \"2020-03-27T17:15:35.372Z\", \"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\"}, \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-09-16T17:52:44.147Z\", \"name\": \"Software Discovery\", \"attack_pattern_identifier\": \"T1518\", \"description\": \"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\", \"modified\": \"2020-09-16T19:36:17.133Z\", \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"}}}"