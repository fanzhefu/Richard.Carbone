{
  "id": "threat-actor--4c4f8407-f53e-5076-9411-b58333642847",
  "name": "UNC2630",
  "type": "actor-mitre",
  "attack-patterns": {
    "Exfiltration": [
      {
        "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
        "attribution_scope": "possible"
      }
    ],
    "Persistence": [
      {
        "id": "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "suspected",
        "sub_techniques": [
          {
            "id": "attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f",
            "attribution_scope": "suspected"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
        "attribution_scope": "confirmed"
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "suspected",
        "sub_techniques": [
          {
            "id": "attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f",
            "attribution_scope": "suspected"
          }
        ]
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475",
        "attribution_scope": "possible"
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a",
            "attribution_scope": "possible"
          }
        ]
      },
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
        "attribution_scope": "possible",
        "sub_techniques": [
          {
            "id": "attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0",
            "attribution_scope": "possible"
          }
        ]
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
        "attribution_scope": "confirmed"
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
        "attribution_scope": "possible"
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--4c4f8407-f53e-5076-9411-b58333642847\", \"name\": \"UNC2630\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Exfiltration\": [{\"id\": \"attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\", \"attribution_scope\": \"possible\"}], \"Persistence\": [{\"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\", \"attribution_scope\": \"confirmed\"}]}], \"Execution\": [{\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56\", \"attribution_scope\": \"confirmed\"}]}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"suspected\", \"sub_techniques\": [{\"id\": \"attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f\", \"attribution_scope\": \"suspected\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\", \"attribution_scope\": \"confirmed\"}], \"Defense Evasion\": [{\"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"suspected\", \"sub_techniques\": [{\"id\": \"attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f\", \"attribution_scope\": \"suspected\"}]}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd\", \"attribution_scope\": \"confirmed\"}]}], \"Discovery\": [{\"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\", \"attribution_scope\": \"possible\"}], \"Credential Access\": [{\"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd\", \"attribution_scope\": \"confirmed\"}]}], \"Collection\": [{\"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\", \"attribution_scope\": \"possible\"}]}, {\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\", \"attribution_scope\": \"possible\", \"sub_techniques\": [{\"id\": \"attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0\", \"attribution_scope\": \"possible\"}]}], \"Initial Access\": [{\"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\", \"attribution_scope\": \"confirmed\"}], \"Command and Control\": [{\"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\", \"attribution_scope\": \"possible\"}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T19:01:56.887Z\", \"name\": \"Modify Authentication Process\", \"attack_pattern_identifier\": \"T1556\", \"description\": \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. \\n\\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. \", \"modified\": \"2020-10-21T02:41:11.743Z\", \"id\": \"attack-pattern--f4c1826f-a322-41cd-9557-562100848c84\"}, \"attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-14T01:33:19.065Z\", \"name\": \"Ptrace System Calls\", \"attack_pattern_identifier\": \"T1055.008\", \"description\": \"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \\n\\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes\\u2019 memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) \\n\\nPtrace system call injection may not be possible targeting processes with high-privileges, and on some system those that are non-child processes.(Citation: BH Linux Inject) \\n\\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. \", \"modified\": \"2020-06-20T22:24:56.734Z\", \"id\": \"attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:45.139Z\", \"name\": \"System Network Connections Discovery\", \"attack_pattern_identifier\": \"T1049\", \"description\": \"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \\n\\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview)\\n\\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \\\"net use,\\\" and \\\"net session\\\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \\\"net session\\\".\", \"modified\": \"2020-03-15T14:15:32.910Z\", \"id\": \"attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475\"}, \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:44.421Z\", \"name\": \"External Remote Services\", \"attack_pattern_identifier\": \"T1133\", \"description\": \"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) can also be used externally.\\n\\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\", \"modified\": \"2020-06-19T20:07:09.600Z\", \"id\": \"attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:15:05.330Z\", \"name\": \"Unix Shell\", \"attack_pattern_identifier\": \"T1059.004\", \"description\": \"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\\n\\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.\", \"modified\": \"2020-06-15T16:55:44.483Z\", \"id\": \"attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56\"}, \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-06-28T17:52:07.296Z\", \"name\": \"Server Software Component\", \"attack_pattern_identifier\": \"T1505\", \"description\": \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\", \"modified\": \"2020-09-16T19:34:19.961Z\", \"id\": \"attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb\"}, \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.195Z\", \"name\": \"Two-Factor Authentication Interception\", \"attack_pattern_identifier\": \"T1111\", \"modified\": \"2020-03-25T20:35:21.672Z\", \"description\": \"Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \\n\\nIf a smart card is used for two-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\\n\\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\\n\\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)\", \"id\": \"attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49\"}, \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:58.938Z\", \"name\": \"Data Staged\", \"attack_pattern_identifier\": \"T1074\", \"description\": \"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.\", \"modified\": \"2020-09-14T19:48:08.180Z\", \"id\": \"attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e\"}, \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:16.408Z\", \"name\": \"Ingress Tool Transfer\", \"attack_pattern_identifier\": \"T1105\", \"modified\": \"2020-03-20T15:42:48.595Z\", \"description\": \"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\", \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"}, \"attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T21:14:58.206Z\", \"name\": \"Remote Data Staging\", \"attack_pattern_identifier\": \"T1074.002\", \"description\": \"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\\n\\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\\n\\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.\", \"modified\": \"2020-09-14T19:48:07.491Z\", \"id\": \"attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-09T12:51:45.570Z\", \"name\": \"Exfiltration Over Web Service\", \"attack_pattern_identifier\": \"T1567\", \"description\": \"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\\n\\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.\", \"modified\": \"2020-03-28T01:02:24.276Z\", \"id\": \"attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807\"}, \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:25.060Z\", \"name\": \"Screen Capture\", \"attack_pattern_identifier\": \"T1113\", \"description\": \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\\n\", \"modified\": \"2020-03-24T19:56:37.627Z\", \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"}, \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T00:36:30.759Z\", \"name\": \"Compromise Infrastructure\", \"attack_pattern_identifier\": \"T1584\", \"description\": \"Before compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\\n\\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)\", \"modified\": \"2020-10-22T18:03:23.937Z\", \"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\"}, \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:27.342Z\", \"name\": \"System Network Configuration Discovery\", \"attack_pattern_identifier\": \"T1016\", \"description\": \"Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"modified\": \"2020-03-15T00:55:33.136Z\", \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"}, \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Create Account\", \"attack_pattern_identifier\": \"T1136\", \"description\": \"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\\n\\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.\", \"modified\": \"2020-03-24T12:44:28.199Z\", \"id\": \"attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.728Z\", \"name\": \"Process Discovery\", \"attack_pattern_identifier\": \"T1057\", \"modified\": \"2020-03-26T18:05:53.130Z\", \"description\": \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\", \"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"}, \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Data from Information Repositories\", \"attack_pattern_identifier\": \"T1213\", \"description\": \"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\\n\\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.\", \"modified\": \"2020-10-12T12:16:55.085Z\", \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"}, \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2019-12-13T16:46:18.927Z\", \"name\": \"Web Shell\", \"attack_pattern_identifier\": \"T1505.003\", \"modified\": \"2020-09-16T19:34:19.752Z\", \"description\": \"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\\n\\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013) \", \"id\": \"attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb\"}, \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-09-16T17:52:44.147Z\", \"name\": \"Software Discovery\", \"attack_pattern_identifier\": \"T1518\", \"description\": \"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\", \"modified\": \"2020-09-16T19:36:17.133Z\", \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.511Z\", \"name\": \"Masquerading\", \"attack_pattern_identifier\": \"T1036\", \"description\": \"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\", \"modified\": \"2020-07-09T13:54:28.727Z\", \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"}, \"attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-10-17T00:14:20.652Z\", \"name\": \"File and Directory Permissions Modification\", \"attack_pattern_identifier\": \"T1222\", \"description\": \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\\n\\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [.bash_profile and .bashrc](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\", \"modified\": \"2020-09-01T20:05:05.562Z\", \"id\": \"attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196\"}, \"attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-19T17:58:04.155Z\", \"name\": \"Network Device Authentication\", \"attack_pattern_identifier\": \"T1556.004\", \"description\": \"Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\\n\\n[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: FireEye - Synful Knock)\", \"modified\": \"2020-10-21T02:41:11.550Z\", \"id\": \"attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd\"}, \"attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:59:50.058Z\", \"name\": \"Web Portal Capture\", \"attack_pattern_identifier\": \"T1056.003\", \"description\": \"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\\n\\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)\", \"modified\": \"2020-03-24T21:16:16.580Z\", \"id\": \"attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-14T13:35:32.938Z\", \"name\": \"Sharepoint\", \"attack_pattern_identifier\": \"T1213.002\", \"description\": \"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\\n\\n* Policies, procedures, and standards\\n* Physical / logical network diagrams\\n* System architecture diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n* Work / project schedules\\n* Source code snippets\\n* Links to network shares and other internal resources\\n\", \"modified\": \"2020-03-24T16:41:00.821Z\", \"id\": \"attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a\"}, \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Exploit Public-Facing Application\", \"attack_pattern_identifier\": \"T1190\", \"description\": \"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \\n\\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\\n\\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)\", \"modified\": \"2020-10-21T01:10:54.358Z\", \"id\": \"attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c\"}, \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:08.479Z\", \"name\": \"Proxy\", \"attack_pattern_identifier\": \"T1090\", \"description\": \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\\n\\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\", \"modified\": \"2020-10-21T17:54:28.531Z\", \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"}, \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T20:43:10.239Z\", \"name\": \"Match Legitimate Name or Location\", \"attack_pattern_identifier\": \"T1036.005\", \"description\": \"Adversaries may match or approximate the name or location of legitimate files when naming/placing their files. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). Alternatively, the filename given may be a close approximation of legitimate programs or something innocuous.\\n\\nAdversaries may also use the same icon of the file they are trying to mimic.\", \"modified\": \"2020-06-20T22:11:45.970Z\", \"id\": \"attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2\"}, \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:19.735Z\", \"name\": \"OS Credential Dumping\", \"attack_pattern_identifier\": \"T1003\", \"description\": \"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\\n\\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\\n\", \"modified\": \"2020-06-09T20:46:00.758Z\", \"id\": \"attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22\"}, \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-15T16:03:39.082Z\", \"name\": \"Protocol Tunneling\", \"attack_pattern_identifier\": \"T1572\", \"description\": \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \\n\\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \\n\\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \\n\\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. \", \"modified\": \"2020-03-27T17:15:35.372Z\", \"id\": \"attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b\"}, \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:12.196Z\", \"name\": \"Account Manipulation\", \"attack_pattern_identifier\": \"T1098\", \"description\": \"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\", \"modified\": \"2020-10-05T16:43:29.473Z\", \"id\": \"attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27\"}, \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-14T23:23:41.770Z\", \"name\": \"Multi-hop Proxy\", \"attack_pattern_identifier\": \"T1090.003\", \"description\": \"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\\n\\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\\u2019s WAN. Protocols such as ICMP may be used as a transport.\", \"modified\": \"2020-10-21T17:54:28.280Z\", \"id\": \"attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-11T18:18:34.279Z\", \"name\": \"Compromise Client Software Binary\", \"attack_pattern_identifier\": \"T1554\", \"description\": \"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\\n\\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.\", \"modified\": \"2020-03-27T14:49:58.249Z\", \"id\": \"attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.720Z\", \"name\": \"Exfiltration Over Alternative Protocol\", \"attack_pattern_identifier\": \"T1048\", \"modified\": \"2020-03-28T00:50:31.548Z\", \"description\": \"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \\n\\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \\n\\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) \", \"id\": \"attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776\"}}}"