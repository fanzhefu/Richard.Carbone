{
  "id": "threat-actor--c3dc89e5-c9f7-5217-b5fc-a476a7d6e7a3",
  "name": "UNC4814",
  "type": "actor-mitre",
  "attack-patterns": {
    "Execution": [
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Resource Development": [
      {
        "id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
        "attribution_scope": "confirmed"
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed"
      }
    ],
    "Credential Access": [
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      }
    ],
    "Collection": [
      {
        "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
        "attribution_scope": "confirmed"
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--c3dc89e5-c9f7-5217-b5fc-a476a7d6e7a3\", \"name\": \"UNC4814\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Execution\": [{\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\", \"attribution_scope\": \"confirmed\"}]}], \"Resource Development\": [{\"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\", \"attribution_scope\": \"confirmed\"}], \"Defense Evasion\": [{\"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\"}], \"Credential Access\": [{\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}], \"Discovery\": [{\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}], \"Collection\": [{\"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\", \"attribution_scope\": \"confirmed\"}]}], \"Initial Access\": [{\"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\", \"attribution_scope\": \"confirmed\"}]}], \"Command and Control\": [{\"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\", \"attribution_scope\": \"confirmed\"}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-20T20:53:45.725Z\", \"name\": \"Archive Collected Data\", \"attack_pattern_identifier\": \"T1560\", \"description\": \"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\", \"modified\": \"2020-10-21T16:36:55.831Z\", \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"}, \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-16T15:33:01.739Z\", \"name\": \"Encrypted Channel\", \"attack_pattern_identifier\": \"T1573\", \"modified\": \"2020-03-30T00:37:16.809Z\", \"description\": \"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\", \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"}, \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T00:36:30.759Z\", \"name\": \"Compromise Infrastructure\", \"attack_pattern_identifier\": \"T1584\", \"description\": \"Before compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\\n\\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)\", \"modified\": \"2020-10-22T18:03:23.937Z\", \"id\": \"attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9\"}, \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:58:11.791Z\", \"name\": \"Keylogging\", \"attack_pattern_identifier\": \"T1056.001\", \"description\": \"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\\n\\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\\n* Reading raw keystroke data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) \", \"modified\": \"2020-10-21T01:30:56.227Z\", \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-02T19:05:18.137Z\", \"name\": \"Spearphishing Attachment\", \"attack_pattern_identifier\": \"T1566.001\", \"description\": \"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.\\n\\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\", \"modified\": \"2020-10-18T01:52:25.316Z\", \"id\": \"attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597\"}, \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"User Execution\", \"attack_pattern_identifier\": \"T1204\", \"modified\": \"2020-03-11T14:55:56.315Z\", \"description\": \"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\\n\\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"id\": \"attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5\"}, \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-20T21:01:25.428Z\", \"name\": \"Archive via Utility\", \"attack_pattern_identifier\": \"T1560.001\", \"modified\": \"2020-03-25T21:54:37.374Z\", \"description\": \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.\", \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"}, \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:16.408Z\", \"name\": \"Ingress Tool Transfer\", \"attack_pattern_identifier\": \"T1105\", \"modified\": \"2020-03-20T15:42:48.595Z\", \"description\": \"Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\", \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"}, \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-02T18:45:07.892Z\", \"name\": \"Phishing\", \"attack_pattern_identifier\": \"T1566\", \"description\": \"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\\n\\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems or to gather credentials for use of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Phishing may also be conducted via third-party services, like social media platforms.\", \"modified\": \"2020-10-18T01:55:03.337Z\", \"id\": \"attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-26T17:41:25.933Z\", \"name\": \"Hide Artifacts\", \"attack_pattern_identifier\": \"T1564\", \"description\": \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)\", \"modified\": \"2020-09-23T11:31:50.636Z\", \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"}, \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T20:26:49.433Z\", \"name\": \"Hidden Window\", \"attack_pattern_identifier\": \"T1564.003\", \"description\": \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", \"modified\": \"2020-03-29T22:49:43.557Z\", \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"}, \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:27:31.768Z\", \"name\": \"DNS\", \"attack_pattern_identifier\": \"T1071.004\", \"description\": \"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) \", \"modified\": \"2020-10-21T16:26:34.196Z\", \"id\": \"attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72\"}, \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-10-01T01:30:00.877Z\", \"name\": \"Develop Capabilities\", \"attack_pattern_identifier\": \"T1587\", \"description\": \"Before compromising a victim, adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.\", \"modified\": \"2020-10-22T18:18:08.552Z\", \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:10.728Z\", \"name\": \"Non-Application Layer Protocol\", \"attack_pattern_identifier\": \"T1095\", \"modified\": \"2020-10-21T19:41:49.412Z\", \"description\": \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\", \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"}, \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-16T15:48:33.882Z\", \"name\": \"Asymmetric Cryptography\", \"attack_pattern_identifier\": \"T1573.002\", \"modified\": \"2020-03-30T00:37:16.593Z\", \"description\": \"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\\n\\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).\", \"id\": \"attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-10-01T01:42:24.974Z\", \"name\": \"Digital Certificates\", \"attack_pattern_identifier\": \"T1587.003\", \"description\": \"Before compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\\n\\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\", \"modified\": \"2020-10-22T18:18:08.422Z\", \"id\": \"attack-pattern--1cec9319-743b-4840-bb65-431547bce82a\"}, \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-06-23T19:12:24.924Z\", \"name\": \"JavaScript/JScript\", \"attack_pattern_identifier\": \"T1059.007\", \"description\": \"Adversaries may abuse JavaScript and/or JScript for execution. JavaScript (JS) is a platform-agnostic scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\\n\\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\\n\\nAdversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).\", \"modified\": \"2020-06-25T03:23:13.804Z\", \"id\": \"attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d\"}, \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:48.323Z\", \"name\": \"Input Capture\", \"attack_pattern_identifier\": \"T1056\", \"description\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\", \"modified\": \"2020-10-21T01:31:35.760Z\", \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"}, \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-11T14:49:36.954Z\", \"name\": \"Malicious File\", \"attack_pattern_identifier\": \"T1204.002\", \"description\": \"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\\n\\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\\n\\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\", \"modified\": \"2020-03-11T14:55:56.177Z\", \"id\": \"attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}}}"