{
  "id": "threat-actor--e13e427a-f009-53a6-a826-4876459895c3",
  "name": "UNC3973",
  "type": "actor-mitre",
  "attack-patterns": {
    "Impact": [
      {
        "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
        "attribution_scope": "confirmed"
      }
    ],
    "Persistence": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Lateral Movement": [
      {
        "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Execution": [
      {
        "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "attribution_scope": "confirmed"
          },
          {
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Privilege Escalation": [
      {
        "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Defense Evasion": [
      {
        "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ],
    "Discovery": [
      {
        "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
            "attribution_scope": "confirmed"
          }
        ]
      },
      {
        "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
        "attribution_scope": "confirmed"
      },
      {
        "id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
        "attribution_scope": "confirmed"
      }
    ],
    "Initial Access": [
      {
        "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
        "attribution_scope": "confirmed"
      }
    ],
    "Command and Control": [
      {
        "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
        "attribution_scope": "confirmed",
        "sub_techniques": [
          {
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "attribution_scope": "confirmed"
          }
        ]
      }
    ]
  },
  "is_publishable": true
}
"{\"threat-actors\": [{\"id\": \"threat-actor--e13e427a-f009-53a6-a826-4876459895c3\", \"name\": \"UNC3973\", \"type\": \"actor-mitre\", \"attack-patterns\": {\"Impact\": [{\"id\": \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\", \"attribution_scope\": \"confirmed\"}], \"Persistence\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}], \"Lateral Movement\": [{\"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\", \"attribution_scope\": \"confirmed\"}]}], \"Execution\": [{\"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\", \"attribution_scope\": \"confirmed\"}]}], \"Privilege Escalation\": [{\"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\", \"attribution_scope\": \"confirmed\"}]}], \"Defense Evasion\": [{\"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\", \"attribution_scope\": \"confirmed\"}]}], \"Discovery\": [{\"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\", \"attribution_scope\": \"confirmed\"}]}, {\"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\", \"attribution_scope\": \"confirmed\"}, {\"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\", \"attribution_scope\": \"confirmed\"}], \"Initial Access\": [{\"id\": \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\", \"attribution_scope\": \"confirmed\"}], \"Command and Control\": [{\"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\", \"attribution_scope\": \"confirmed\", \"sub_techniques\": [{\"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\", \"attribution_scope\": \"confirmed\"}]}]}, \"is_publishable\": true}], \"attack-patterns\": {\"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-19T21:27:32.820Z\", \"name\": \"Indicator Removal from Tools\", \"attack_pattern_identifier\": \"T1027.005\", \"description\": \"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\\n\\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.\", \"modified\": \"2020-03-29T21:03:09.766Z\", \"id\": \"attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92\"}, \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-10T19:49:46.752Z\", \"name\": \"Invalid Code Signature\", \"attack_pattern_identifier\": \"T1036.001\", \"modified\": \"2020-02-10T19:52:47.724Z\", \"description\": \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\\n\\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.\", \"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\"}, \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-12-14T16:46:06.044Z\", \"name\": \"Deobfuscate/Decode Files or Information\", \"attack_pattern_identifier\": \"T1140\", \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\\n\\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)\", \"modified\": \"2020-07-09T14:42:23.122Z\", \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"}, \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.892Z\", \"name\": \"Indicator Removal on Host\", \"attack_pattern_identifier\": \"T1070\", \"description\": \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.\", \"modified\": \"2020-10-16T18:09:49.074Z\", \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"}, \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-24T14:07:56.276Z\", \"name\": \"Windows Management Instrumentation Event Subscription\", \"attack_pattern_identifier\": \"T1546.003\", \"description\": \"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. (Citation: Mandiant M-Trends 2015)\\n\\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\\n\\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\", \"modified\": \"2020-05-05T12:02:45.522Z\", \"id\": \"attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58\"}, \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-06T20:57:37.959Z\", \"name\": \"System Checks\", \"attack_pattern_identifier\": \"T1497.001\", \"description\": \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \\n\\nChecks could include generic system properties such as uptime and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \\n\\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \\n \\nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)\", \"modified\": \"2020-07-01T16:32:02.514Z\", \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"}, \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:25:28.212Z\", \"name\": \"SMB/Windows Admin Shares\", \"attack_pattern_identifier\": \"T1021.002\", \"modified\": \"2020-03-23T21:16:02.812Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\\n\\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\\n\\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)\", \"id\": \"attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541\"}, \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T14:12:31.196Z\", \"name\": \"Windows Command Shell\", \"attack_pattern_identifier\": \"T1059.003\", \"modified\": \"2020-03-28T17:02:13.722Z\", \"description\": \"Adversaries may abuse the Windows command shell for execution. The Windows command shell (<code>cmd.exe</code>) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \\n\\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\\n\\nAdversaries may leverage <code>cmd.exe</code> to execute various commands and payloads. Common uses include <code>cmd.exe /c</code> to execute a single command, or abusing <code>cmd.exe</code> interactively with input and output forwarded over a command and control channel.\", \"id\": \"attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62\"}, \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-12T20:38:12.465Z\", \"name\": \"Hijack Execution Flow\", \"attack_pattern_identifier\": \"T1574\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\\n\\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.\", \"modified\": \"2020-10-17T15:15:28.288Z\", \"id\": \"attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6\"}, \"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-13T11:42:14.444Z\", \"name\": \"Services Registry Permissions Weakness\", \"attack_pattern_identifier\": \"T1574.011\", \"description\": \"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.  Windows stores local service configuration information in the Registry under <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: Registry Key Security)\\n\\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\\n\\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness) \", \"modified\": \"2020-09-16T19:07:48.590Z\", \"id\": \"attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c\"}, \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-10T18:33:36.159Z\", \"name\": \"Service Execution\", \"attack_pattern_identifier\": \"T1569.002\", \"modified\": \"2020-03-28T18:52:02.384Z\", \"description\": \"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals)\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.\", \"id\": \"attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4\"}, \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.710Z\", \"name\": \"File and Directory Discovery\", \"attack_pattern_identifier\": \"T1083\", \"modified\": \"2020-09-16T16:02:16.770Z\", \"description\": \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).\", \"id\": \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"}, \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-29T19:00:55.901Z\", \"name\": \"Service Stop\", \"attack_pattern_identifier\": \"T1489\", \"description\": \"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \\n\\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)\", \"modified\": \"2020-07-24T15:36:08.042Z\", \"id\": \"attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b\"}, \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-17T22:22:24.505Z\", \"name\": \"Virtualization/Sandbox Evasion\", \"attack_pattern_identifier\": \"T1497\", \"modified\": \"2020-07-01T16:32:02.272Z\", \"description\": \"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors. \\n\\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\", \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"}, \"attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-04-02T13:54:43.136Z\", \"name\": \"Inhibit System Recovery\", \"attack_pattern_identifier\": \"T1490\", \"description\": \"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)\\n\\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\\n\\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\", \"modified\": \"2020-07-14T19:33:52.512Z\", \"id\": \"attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a\"}, \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:21.315Z\", \"name\": \"System Service Discovery\", \"attack_pattern_identifier\": \"T1007\", \"modified\": \"2020-03-15T01:05:08.805Z\", \"description\": \"Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \\\"sc,\\\" \\\"tasklist /svc\\\" using [Tasklist](https://attack.mitre.org/software/S0057), and \\\"net start\\\" using [Net](https://attack.mitre.org/software/S0039), but adversaries may also use other tools as well. Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\", \"id\": \"attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa\"}, \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:44.329Z\", \"name\": \"Windows Management Instrumentation\", \"attack_pattern_identifier\": \"T1047\", \"description\": \"Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) (Citation: Wikipedia SMB) and Remote Procedure Call Service (RPCS) (Citation: TechNet RPC) for remote access. RPCS operates over port 135. (Citation: MSDN WMI)\\n\\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)\", \"modified\": \"2020-05-13T22:50:51.258Z\", \"id\": \"attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055\"}, \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-03-10T18:23:06.482Z\", \"name\": \"System Services\", \"attack_pattern_identifier\": \"T1569\", \"description\": \"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.\", \"modified\": \"2020-06-08T23:28:29.250Z\", \"id\": \"attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253\"}, \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-02-21T20:22:13.470Z\", \"name\": \"Impair Defenses\", \"attack_pattern_identifier\": \"T1562\", \"description\": \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\\n\\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.\", \"modified\": \"2020-10-19T16:31:35.249Z\", \"id\": \"attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529\"}, \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:04.307Z\", \"name\": \"System Information Discovery\", \"attack_pattern_identifier\": \"T1082\", \"modified\": \"2020-03-26T18:17:42.298Z\", \"description\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\", \"id\": \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"}, \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:32.662Z\", \"name\": \"Obfuscated Files or Information\", \"attack_pattern_identifier\": \"T1027\", \"description\": \"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n\\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \\n\\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) \", \"modified\": \"2020-09-16T19:24:20.601Z\", \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"}, \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-07T14:10:32.650Z\", \"name\": \"Domain Policy Modification\", \"attack_pattern_identifier\": \"T1484\", \"description\": \"Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\\n\\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks) Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\\n\\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.\", \"modified\": \"2021-01-11T19:48:37.680Z\", \"id\": \"attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d\"}, \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:23.587Z\", \"name\": \"Modify Registry\", \"attack_pattern_identifier\": \"T1112\", \"description\": \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\\n\\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\", \"modified\": \"2020-08-13T20:02:49.641Z\", \"id\": \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"}, \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-22T21:04:23.285Z\", \"name\": \"Event Triggered Execution\", \"attack_pattern_identifier\": \"T1546\", \"description\": \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \\n\\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\\n\\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. \", \"modified\": \"2020-10-21T18:48:27.576Z\", \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\"}, \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-21T20:32:20.810Z\", \"name\": \"Disable or Modify Tools\", \"attack_pattern_identifier\": \"T1562.001\", \"modified\": \"2020-03-29T21:52:43.151Z\", \"description\": \"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.\", \"id\": \"attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579\"}, \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:24.512Z\", \"name\": \"Application Window Discovery\", \"attack_pattern_identifier\": \"T1010\", \"description\": \"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\", \"modified\": \"2020-03-26T15:44:27.068Z\", \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"}, \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2018-04-18T17:59:24.739Z\", \"name\": \"Trusted Relationship\", \"attack_pattern_identifier\": \"T1199\", \"description\": \"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\\n\\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.\", \"modified\": \"2020-07-14T19:38:14.299Z\", \"id\": \"attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925\"}, \"attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-12-28T21:50:59.844Z\", \"name\": \"Group Policy Modification\", \"attack_pattern_identifier\": \"T1484.001\", \"description\": \"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\\\\\\\&lt;DOMAIN&gt;\\\\SYSVOL\\\\&lt;DOMAIN&gt;\\\\Policies\\\\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \\n\\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\\n\\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1035),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\\n\\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\\\Machine\\\\Preferences\\\\ScheduledTasks\\\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\\\MACHINE\\\\Microsoft\\\\Windows NT\\\\SecEdit\\\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)\", \"modified\": \"2021-01-07T21:18:12.645Z\", \"id\": \"attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163\"}, \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-02-11T18:23:26.059Z\", \"name\": \"Remote Desktop Protocol\", \"attack_pattern_identifier\": \"T1021.001\", \"modified\": \"2020-02-25T19:23:34.204Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\\n\\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \\n\\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)\", \"id\": \"attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf\"}, \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2020-01-10T16:03:18.865Z\", \"name\": \"Create or Modify System Process\", \"attack_pattern_identifier\": \"T1543\", \"description\": \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \\n\\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \\n\\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  \", \"modified\": \"2020-10-09T13:46:29.922Z\", \"id\": \"attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5\"}, \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:47.843Z\", \"name\": \"Process Injection\", \"attack_pattern_identifier\": \"T1055\", \"description\": \"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \\n\\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \\n\\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. \", \"modified\": \"2020-06-20T22:28:45.651Z\", \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"}, \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:31:06.988Z\", \"name\": \"Account Discovery\", \"attack_pattern_identifier\": \"T1087\", \"description\": \"Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\", \"modified\": \"2020-09-16T15:10:18.260Z\", \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"}, \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:55.471Z\", \"name\": \"Permission Groups Discovery\", \"attack_pattern_identifier\": \"T1069\", \"description\": \"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\", \"modified\": \"2020-10-08T17:36:01.675Z\", \"id\": \"attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce\"}, \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:49.546Z\", \"name\": \"Command and Scripting Interpreter\", \"attack_pattern_identifier\": \"T1059\", \"description\": \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.\", \"modified\": \"2020-10-22T16:43:39.362Z\", \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"}, \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-31T12:35:36.479Z\", \"name\": \"File Deletion\", \"attack_pattern_identifier\": \"T1070.004\", \"description\": \"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)\", \"modified\": \"2020-03-29T21:34:16.209Z\", \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"}, \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:38.511Z\", \"name\": \"Masquerading\", \"attack_pattern_identifier\": \"T1036\", \"description\": \"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\\n\\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)\", \"modified\": \"2020-07-09T13:54:28.727Z\", \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"}, \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:29.858Z\", \"name\": \"Remote Services\", \"attack_pattern_identifier\": \"T1021\", \"modified\": \"2020-03-25T12:25:03.251Z\", \"description\": \"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\\n\\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\", \"id\": \"attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba\"}, \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-03-15T13:59:30.390Z\", \"name\": \"Data Encrypted for Impact\", \"attack_pattern_identifier\": \"T1486\", \"description\": \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018) In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017)\\n\\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)\", \"modified\": \"2020-10-14T14:52:11.708Z\", \"id\": \"attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0\"}, \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2017-05-31T21:30:56.776Z\", \"name\": \"Application Layer Protocol\", \"attack_pattern_identifier\": \"T1071\", \"description\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. \", \"modified\": \"2020-10-21T16:35:45.986Z\", \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"}, \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-09T13:48:55.078Z\", \"name\": \"PowerShell\", \"attack_pattern_identifier\": \"T1059.001\", \"modified\": \"2020-06-24T13:51:22.360Z\", \"description\": \"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\\n\\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\\n\\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\\n\\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)\", \"id\": \"attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736\"}, \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\": {\"x_mitre_is_subtechnique\": false, \"created\": \"2019-10-04T20:42:28.541Z\", \"name\": \"System Shutdown/Reboot\", \"attack_pattern_identifier\": \"T1529\", \"modified\": \"2020-03-27T21:18:48.149Z\", \"description\": \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)\", \"id\": \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"}, \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-01-17T19:13:50.402Z\", \"name\": \"Windows Service\", \"attack_pattern_identifier\": \"T1543.003\", \"description\": \"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \\n\\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\\n\\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \\n\\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). \", \"modified\": \"2020-09-16T15:49:58.490Z\", \"id\": \"attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32\"}, \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\": {\"x_mitre_is_subtechnique\": true, \"created\": \"2020-03-15T16:13:46.151Z\", \"name\": \"Web Protocols\", \"attack_pattern_identifier\": \"T1071.001\", \"description\": \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. \", \"modified\": \"2020-03-26T20:15:35.821Z\", \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"}}}"